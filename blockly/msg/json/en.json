{
	"@metadata": {
		"author": "Ellen Spertus <ellen.spertus@gmail.com>",
		"lastupdated": "2017-11-24 10:43:42.092863",
		"locale": "en",
		"messagedocumentation" : "qqq"
	},
	"VARIABLES_DEFAULT_NAME": "item",
	"TODAY": "Today",
	"DUPLICATE_BLOCK": "Duplicate",
	"ADD_COMMENT": "Add Comment",
	"REMOVE_COMMENT": "Remove Comment",
	"EXTERNAL_INPUTS": "External Inputs",
	"INLINE_INPUTS": "Inline Inputs",
	"DELETE_BLOCK": "Delete Block",
	"DELETE_X_BLOCKS": "Delete %1 Blocks",
	"DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
	"CLEAN_UP": "Clean up Blocks",
	"COLLAPSE_BLOCK": "Collapse Block",
	"COLLAPSE_ALL": "Collapse Blocks",
	"EXPAND_BLOCK": "Expand Block",
	"EXPAND_ALL": "Expand Blocks",
	"DISABLE_BLOCK": "Disable Block",
	"ENABLE_BLOCK": "Enable Block",
	"HELP": "Help",
	"UNDO": "Undo",
	"REDO": "Redo",
	"CHAT": "Chat with your collaborator by typing in this box!",
	"AUTH": "Please authorize this app to enable your work to be saved and to allow it to be shared by you.",
	"ME": "Me",
	"CHANGE_VALUE_TITLE": "Change value:",
	"NEW_VARIABLE": "New variable...",
	"NEW_VARIABLE_TITLE": "New variable name:",
	"RENAME_VARIABLE": "Rename variable...",
	"RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
	"COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
	"COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
	"COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
	"COLOUR_RANDOM_TITLE": "random colour",
	"COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
	"COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
	"COLOUR_RGB_TITLE": "colour with",
	"COLOUR_RGB_RED": "red",
	"COLOUR_RGB_GREEN": "green",
	"COLOUR_RGB_BLUE": "blue",
	"COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
	"COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
	"COLOUR_BLEND_TITLE": "blend",
	"COLOUR_BLEND_COLOUR1": "colour 1",
	"COLOUR_BLEND_COLOUR2": "colour 2",
	"COLOUR_BLEND_RATIO": "ratio",
	"COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
	"CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
	"CONTROLS_REPEAT_TITLE": "repeat %1 times",
	"CONTROLS_REPEAT_INPUT_DO": "do",
	"CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
	"CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
	"CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
	"CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
	"CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
	"CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
	"CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
	"CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
	"CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
	"CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
	"CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
	"CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
	"CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
	"CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
	"CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
	"CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
	"CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
	"CONTROLS_IF_MSG_IF": "if",
	"CONTROLS_IF_MSG_ELSEIF": "else if",
	"CONTROLS_IF_MSG_ELSE": "else",
	"CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
	"CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
	"CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
	"LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
	"LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
	"LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
	"LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
	"LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
	"LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
	"LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
	"LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
	"LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
	"LOGIC_OPERATION_AND": "and",
	"LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
	"LOGIC_OPERATION_OR": "or",
	"LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
	"LOGIC_NEGATE_TITLE": "not %1",
	"LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
	"LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
	"LOGIC_BOOLEAN_TRUE": "true",
	"LOGIC_BOOLEAN_FALSE": "false",
	"LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
	"LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
	"LOGIC_NULL": "null",
	"LOGIC_NULL_TOOLTIP": "Returns null.",
	"LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
	"LOGIC_TERNARY_CONDITION": "test",
	"LOGIC_TERNARY_IF_TRUE": "if true",
	"LOGIC_TERNARY_IF_FALSE": "if false",
	"LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.",
	"MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
	"MATH_NUMBER_TOOLTIP": "A number.",
	"MATH_ADDITION_SYMBOL": "+",
	"MATH_SUBTRACTION_SYMBOL": "-",
	"MATH_DIVISION_SYMBOL": "÷",
	"MATH_MULTIPLICATION_SYMBOL": "×",
	"MATH_POWER_SYMBOL": "^",
	"MATH_TRIG_SIN": "sin",
	"MATH_TRIG_COS": "cos",
	"MATH_TRIG_TAN": "tan",
	"MATH_TRIG_ASIN": "asin",
	"MATH_TRIG_ACOS": "acos",
	"MATH_TRIG_ATAN": "atan",
	"MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
	"MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
	"MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
	"MATH_SINGLE_OP_ROOT": "square root",
	"MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
	"MATH_SINGLE_OP_ABSOLUTE": "absolute",
	"MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
	"MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
	"MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
	"MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
	"MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
	"MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
	"MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
	"MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
	"MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
	"MATH_CONSTANT_TOOLTIP": "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).",
	"MATH_IS_EVEN": "is even",
	"MATH_IS_ODD": "is odd",
	"MATH_IS_PRIME": "is prime",
	"MATH_IS_WHOLE": "is whole",
	"MATH_IS_POSITIVE": "is positive",
	"MATH_IS_NEGATIVE": "is negative",
	"MATH_IS_DIVISIBLE_BY": "is divisible by",
	"MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
	"MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
	"MATH_CHANGE_TITLE": "change %1 by %2",
	"MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
	"MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
	"MATH_ROUND_TOOLTIP": "Round a number up or down.",
	"MATH_ROUND_OPERATOR_ROUND": "round",
	"MATH_ROUND_OPERATOR_ROUNDUP": "round up",
	"MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
	"MATH_ONLIST_HELPURL": "",
	"MATH_ONLIST_OPERATOR_SUM": "sum of list",
	"MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
	"MATH_ONLIST_OPERATOR_MIN": "min of list",
	"MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
	"MATH_ONLIST_OPERATOR_MAX": "max of list",
	"MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
	"MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
	"MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
	"MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
	"MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
	"MATH_ONLIST_OPERATOR_MODE": "modes of list",
	"MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
	"MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
	"MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
	"MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
	"MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
	"MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
	"MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
	"MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
	"MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_%28graphics%29",
	"MATH_CONSTRAIN_TITLE": "constrain %1 low %2 high %3",
	"MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
	"MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
	"MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
	"MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
	"MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
	"TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
	"TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
	"TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
	"TEXT_JOIN_TITLE_CREATEWITH": "create text with",
	"TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
	"TEXT_CREATE_JOIN_TITLE_JOIN": "join",
	"TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
	"TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
	"TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_APPEND_TO": "to",
	"TEXT_APPEND_APPENDTEXT": "append text",
	"TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
	"TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_LENGTH_TITLE": "length of %1",
	"TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
	"TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
	"TEXT_ISEMPTY_TITLE": "%1 is empty",
	"TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
	"TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
	"TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.",
	"TEXT_INDEXOF_INPUT_INTEXT": "in text",
	"TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
	"TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
	"TEXT_INDEXOF_TAIL": "",
	"TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
	"TEXT_CHARAT_INPUT_INTEXT": "in text",
	"TEXT_CHARAT_FROM_START": "get letter #",
	"TEXT_CHARAT_FROM_END": "get letter # from end",
	"TEXT_CHARAT_FIRST": "get first letter",
	"TEXT_CHARAT_LAST": "get last letter",
	"TEXT_CHARAT_RANDOM": "get random letter",
	"TEXT_CHARAT_TAIL": "",
	"TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
	"TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
	"TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
	"TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
	"TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
	"TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
	"TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
	"TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
	"TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
	"TEXT_GET_SUBSTRING_END_LAST": "to last letter",
	"TEXT_GET_SUBSTRING_TAIL": "",
	"TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
	"TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
	"TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
	"TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
	"TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
	"TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
	"TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
	"TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
	"TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
	"TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
	"TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_PRINT_TITLE": "print %1",
	"TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
	"TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
	"TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
	"TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
	"TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
	"TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
	"LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
	"LISTS_CREATE_EMPTY_TITLE": "create empty list",
	"LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
	"LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
	"LISTS_CREATE_WITH_INPUT_WITH": "create list with",
	"LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
	"LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
	"LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
	"LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
	"LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
	"LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
	"LISTS_LENGTH_TITLE": "length of %1",
	"LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
	"LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
	"LISTS_ISEMPTY_TITLE": "%1 is empty",
	"LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
	"LISTS_INLIST": "in list",
	"LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
	"LISTS_INDEX_OF_FIRST": "find first occurrence of item",
	"LISTS_INDEX_OF_LAST": "find last occurrence of item",
	"LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns 0 if item is not found.",
	"LISTS_GET_INDEX_GET": "get",
	"LISTS_GET_INDEX_GET_REMOVE": "get and remove",
	"LISTS_GET_INDEX_REMOVE": "remove",
	"LISTS_GET_INDEX_FROM_START": "#",
	"LISTS_GET_INDEX_FROM_END": "# from end",
	"LISTS_GET_INDEX_FIRST": "first",
	"LISTS_GET_INDEX_LAST": "last",
	"LISTS_GET_INDEX_RANDOM": "random",
	"LISTS_GET_INDEX_TAIL": "",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM_START": "Returns the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM_END": "Returns the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START": "Removes and returns the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END": "Removes and returns the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START": "Removes the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END": "Removes the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
	"LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
	"LISTS_SET_INDEX_SET": "set",
	"LISTS_SET_INDEX_INSERT": "insert at",
	"LISTS_SET_INDEX_INPUT_TO": "as",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM_START": "Sets the item at the specified position in a list. #1 is the first item.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM_END": "Sets the item at the specified position in a list. #1 is the last item.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START": "Inserts the item at the specified position in a list. #1 is the first item.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END": "Inserts the item at the specified position in a list. #1 is the last item.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
	"LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
	"LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
	"LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
	"LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
	"LISTS_GET_SUBLIST_END_FROM_START": "to #",
	"LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
	"LISTS_GET_SUBLIST_END_LAST": "to last",
	"LISTS_GET_SUBLIST_TAIL": "",
	"LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
	"LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
	"LISTS_SORT_TITLE": "sort %1 %2 %3",
	"LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
	"LISTS_SORT_ORDER_ASCENDING": "ascending",
	"LISTS_SORT_ORDER_DESCENDING": "descending",
	"LISTS_SORT_TYPE_NUMERIC": "numeric",
	"LISTS_SORT_TYPE_TEXT": "alphabetic",
	"LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
	"LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
	"LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
	"LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
	"LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
	"LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
	"LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
	"ORDINAL_NUMBER_SUFFIX": "",
	"VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
	"VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
	"VARIABLES_GET_CREATE_SET": "Create 'set %1'",
	"VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
	"VARIABLES_SET": "set %1 to %2",
	"VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
	"VARIABLES_SET_CREATE_GET": "Create 'get %1'",
	"PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFNORETURN_TITLE": "to",
	"PROCEDURES_DEFNORETURN_PROCEDURE": "do something",
	"PROCEDURES_BEFORE_PARAMS": "with:",
	"PROCEDURES_CALL_BEFORE_PARAMS": "with:",
	"PROCEDURES_DEFNORETURN_DO": "",
	"PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
	"PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
	"PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFRETURN_RETURN": "return",
	"PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
	"PROCEDURES_ALLOW_STATEMENTS": "allow statements",
	"PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
	"PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
	"PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
	"PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
	"PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
	"PROCEDURES_MUTATORARG_TITLE": "input name:",
	"PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
	"PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
	"PROCEDURES_CREATE_DO": "Create '%1'",
	"PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
	"PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
	"PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "Short Number",
	"ARD_TYPE_NUMBER": "Number",
	"ARD_TYPE_LONG": "Large Number",
	"ARD_TYPE_DECIMAL": "Decimal",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefined",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_BOARD": "Board",
	"ARD_BOARD_WARN": "This block requires as board %1, but or a duplicate block is present or another block is present that requires another Arduino board!",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "read analog pin#",
	"ARD_ANALOGREAD_TIP": "Return value between 0 and 1024",
	"ARD_ANALOGWRITE": "set analog pin#",
	"ARD_ANALOGWRITE_TIP": "Write analog value between 0 and 255 to a specific PWM Port",
	"ARD_HIGHLOW_TIP": "Set a pin state logic High or Low.",
	"ARD_DIGITALREAD": "read digital pin#",
	"ARD_DIGITALREAD_TIP": "Read digital value on a pin: HIGH or LOW",
	"ARD_DIGITALWRITE": "set digitial pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "Write digital value HIGH or LOW to a specific Port",
	"ARD_BUILTIN_LED": "set built-in LED",
	"ARD_BUILTIN_LED_TIP": "Light on or off for the built-in LED of the Arduino",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "frequency",
	"ARD_TONE_PIN_TIP": "Generate audio tones on a pin",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "Stop generating a tone on a pin",
	"ARD_MAP": "Map",
	"ARD_MAP_VAL": "value to [0-",
	"ARD_MAP_TIP": "Re-maps a number from [0-1024] to another.",
	"ARD_FUN_RUN_DECL": "Arduino define up front:",
	"ARD_FUN_RUN_SETUP": "Arduino run first:",
	"ARD_FUN_RUN_LOOP": "Arduino loop forever:",
	"ARD_FUN_RUN_TIP": "Defines the Arduino setup() and loop() functions.",
	"ARD_FUN_RUN_DECL_TIP": "Code you want to declare up front (use this e.g. for variables you need in setup)",
	"ARD_PIN_WARN1": "Pin %1 is needed for %2 as pin %3. Already used as %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  speed to",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "print",
	"ARD_SERIAL_PRINT_NEWLINE": "add new line",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERVO_WRITE": "set SERVO from Pin",
	"ARD_SERVO_WRITE_TO": "to",
	"ARD_SERVO_WRITE_DEG_180": "Degrees (0~180)",
	"ARD_SERVO_WRITE_TIP": "Set a Servo to an specified angle",
	"ARD_SERVO_READ": "read SERVO from PIN#",
	"ARD_SERVO_READ_TIP": "Read a Servo angle",
	"ARD_SERVOHUB": "Servo motor",
	"ARD_SERVO_DEFAULT_NAME": "Servo1",
	"ARD_SERVO_TYPE": "Type:",
	"ARD_180SERVO": "0~180 degree Servo (angle)",
	"ARD_360SERVO": "0~360 degree Servo (rotation)",
	"ARD_SERVOHUB_TIP": "Servo Motor Connection, which can attach to a PWM pin. You have to give the servo a name, and what type it is (a 180 degree servo or a 360 degree servo.)",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "configuration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Configures the SPI peripheral.",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "transfer",
	"ARD_SPI_TRANS_SLAVE": "to slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup stepper motor",
	"ARD_STEPPER_MOTOR": "stepper motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "move stepper",
	"ARD_STEPPER_STEPS": "steps",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_SPEED_TIP": "Sets speed of the stepper motor. The steps are set at the speed needed to have the set RPM speed based on the given steps per revolution in the constructor.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_STEPPER_ROTATE": "Rotate",
	"ARD_STEPPER_DEGREES": "degrees",
	"ARD_STEPPER_ROTATE_TIP": "Rotate the stepper motor over a number of degrees in a non-blocking way. This block must be called in the loop. When finished the stepper is blocked, and a call to restart movement is needed for the block to cause a next movement.",
	"ARD_STEPPER_RESTART": "Restart",
	"ARD_STEPPER_RESTART_TIP": "Restart the motor after a rotation block has finished",
	"ARD_STEPPER_ISROTATING": "in movement",
	"ARD_STEPPER_ISROTATING_TIP": "Returns true if the stepper is moving.",
	"ARD_SERVO_COMPONENT": "servo",
	"ARD_SERVO_ROTATE360": "Rotate 360 degree Servo",
	"ARD_SERVO_ROTATESPEED": "with speed",
	"ARD_SERVO_ROTATEPERC": "% (-100 to 100)",
	"ARD_SERVO_ROTATE_TIP": "Turn a Servo with a specific speed",
	"ARD_SERVOHUB_WRITE": "set 180 degree Servo ",
	"ARD_SERVOHUB_READ": "read Servo ",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "wait",
	"ARD_TIME_MS": "milliseconds",
	"ARD_TIME_DELAY_TIP": "Wait specific time in milliseconds",
	"ARD_TIME_DELAY_MICROS": "microseconds",
	"ARD_TIME_DELAY_MICRO_TIP": "Wait specific time in microseconds",
	"ARD_TIME_MILLIS": "current elapsed Time (milliseconds)",
	"ARD_TIME_MILLIS_TIP": "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_MICROS": "current elapsed Time (microseconds)",
	"ARD_TIME_MICROS_TIP": "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_INF": "wait forever (end program)",
	"ARD_TIME_INF_TIP": "Wait indefinitely, stopping the program.",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"REPLACE_EXISTING_BLOCKS": "Replace existing blocks? 'Cancel' will merge.",
	"ARD_AS_BOOL_NUMBER": "as boolean",
	"ARD_AS_INTEGER_NUMBER": "as integer number",
	"ARD_AS_UINT_NUMBER": "as positive integer number",
	"ARD_AS_LONG_NUMBER": "as long integer number",
	"ARD_AS_ULONG_NUMBER": "as long positive integer number",
	"ARD_AS_FLOAT_NUMBER": "as decimal number",
	"ARD_AS_BOOL_NUMBER_TIP": "Declare a variable as boolean with value true or false",
	"ARD_AS_INTEGER_NUMBER_TIP": "Declare a variable as integer, -32768 to 32767",
	"ARD_AS_UINT_NUMBER_TIP": "Declare a variable as a positive integer, 0 to 65535",
	"ARD_AS_LONG_NUMBER_TIP": "Declare a variable as a long integer, -2,147,483,648 to 2,147,483,647",
	"ARD_AS_ULONG_NUMBER_TIP": "Declare a variable as a long positive integer, 0 to 4,294,967,295",
	"ARD_AS_FLOAT_NUMBER_TIP": "Declare a variable as a decimal number, eg 3.6 or 5e4 or -3.14",
	"ARD_AS_DIGINPUT_PIN": "as digital input",
	"ARD_AS_DIGINPUT_PIN_TIP": "Declare a variable as a digital input pin",
	"ARD_AS_DIGOUTPUT_PIN": "as digital output",
	"ARD_AS_DIGOUTPUT_PIN_TIP": "Declare a variable as a digital output pin",
	"ARD_AS_ANAINPUT_PIN": "as analog input",
	"ARD_AS_ANAINPUT_PIN_TIP": "Declare a variable as a analog input pin",
	"ARD_AS_ANAOUTPUT_PIN": "as analg output",
	"ARD_AS_ANAOUTPUT_PIN_TIP": "Declare a variable as a analog PWM output pin",
	"ARD_DIGITALWRITEVAR_TIP": "Write digital value to a Port, the value and port can be computed variables",
	"ARD_PIN_AN": "analog pin",
	"ARD_PIN_DIG": "digital pin",
	"ARD_PIN_PWM": "PWM pin",
	"ARD_PIN_AN_TIP": "One of the analog pins of the Arduino Board",
	"ARD_PIN_DIG_TIP": "One of the digital pins of the Arduino Board",
	"ARD_PIN_PWM_TIP": "One of the Pulse Width Modeling (PWM) pins of the Arduino Board",
	"ARD_PULSEREAD": "Read",
	"ARD_PULSEON": "pulse on pin #",
	"ARD_PULSETIMEOUT": "timeout after",
	"ARD_PULSETIMEOUT_MS": "",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the timeout.",
	"ARD_SETTONE": "Set tone on pin #",
	"ARD_TONEFREQ": "at frequency",
	"ARD_TONE_TIP": "Sets tone on pin to specified frequency within range 31 - 65535",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Turn off tone on pin #",
	"ARD_NOTONE_TIP": "Turns the tone off on the selected pin",
	"ARD_LEDLEG_COMPONENT": "LED",
	"ARD_LEDLEG_DEFAULT_NAME": "Led1",
	"ARD_LEDLEG": "LED",
	"ARD_LEDLEGPOL": "leg polarity",
	"ARD_LEDLEGPOS": "plus",
	"ARD_LEDLEGNEG": "minus",
	"ARD_LEDLEG_TIP": "A LED light, on of the legs (the positive or negative) is connected to the Arduino. Can be ON or OFF.",
	"ARD_LEDLEG_SET": "Set LED",
	"ARD_LEDLEG_ON": "ON",
	"ARD_LEDLEG_OFF": "OFF",
	"ARD_NEOPIXEL": "NeoPixel LED light",
	"ARD_NEOPIXEL_STRIP": "Strip with",
	"ARD_NEOPIXEL_PIXELS": "Pixels.",
	"ARD_NEOPIXEL_HZ": "Frequency:",
	"ARD_NEOPIXEL_TYPE": "Type:",
	"ARD_NEOPIXEL_TIP": "A NEOPIXEL LED light or a strip with multiple neopixels.",
	"ARD_NEOPIXEL_SET": "Set Neopixel",
	"ARD_NEOPIXEL_PIXEL": "pixel",
	"ARD_NEOPIXEL_ONCOLOUR": "on colour",
	"ARD_NEOPIXEL_BRIGHTNESS": " brightness (%)",
	"ARD_NEOPIXEL_ONCOLOURVALRED": "on colour (0-255) red:",
	"ARD_NEOPIXEL_ONCOLOURVALGREEN": "green:",
	"ARD_NEOPIXEL_ONCOLOURVALBLUE": "blue:",
	"ARD_NEOPIXEL_COMPONENT": "Neopixel strip",
	"ARD_NEOPIXEL_DEFAULT_NAME": "NeoPixel1",
	"ARD_BLOCKS": "You have this block twice on the canvas. That is once too many!",
	"ARD_BUTTON_COMPONENT": "Push Button",
	"ARD_BUTTON_DEFAULT_NAME": "PushButton1",
	"ARD_BUTTON_IFPUSHED": "If pushed we measure value",
	"ARD_BUTTON_TIP": "Een drukknop die AAN of UIT kan zijn",
	"ARD_BUTTON_READ": "Read value button",
	"ARD_BUTTON_INPUT_IF": "If button",
	"ARD_BUTTON_INPUT_CLICK": " is clicked",
	"ARD_BUTTON_INPUT_THEN": "do",
	"ARD_BUTTON_INPUT_LONGCLICK": "is undergoing a long click",
	"ARD_BUTTON_INPUT_PRESSED": "is being pressed",
	"ARD_BUTTON_INPUT_WAIT": "wait for a click to happen",
	"ARD_BUTTON_INPUT_TIP": "Check the input received on a button, and react to it. This function does not block your program if you do not check the checkbox to wait for a click. A click is a press and a release of the button, a long press a click and holding long time before you release, press is active as soon as the button is pressed down.",
	"ARD_ANASENSOR": "Analog Sensor",
	"ARD_ANASENSOR_TIP": "Connect an analog sensor to an analog pin, so as to read its value. On an Arduino UNO a value between 0 and 1024 is returned, corresponding to a measured value between 0 and 5V. Eg.: an LDR sensor, a potmeter, ...",
	"ARD_ANASENSOR_DEFAULT_NAME": "AnaSensor1",
	"ARD_ANASENSOR_READ": "Read analog sensor",
	"ARD_ANASENSOR_COMPONENT": "Analog Sensor",
	"ARD_DIGINPUT": "Digital input",
	"ARD_DIGINPUT_TIP": "Connect a digital input to a digital pin, so as to read its value. The digital state can then be read, corresponding to 0V or 5V on the pin for an Arduino UNO.",
	"ARD_DIGINPUT_DEFAULT_NAME": "DigInput1",
	"ARD_DIGINPUT_READ": "Read digital input",
	"ARD_DIGINPUT_COMPONENT": "Digital Input",
	"ARD_DIGOUTPUT": "Digital output",
	"ARD_DIGOUTPUT_TIP": "Connect a generic digital ouput to a digital pin, so as to write to that pin. The digital state can be set to LOW or HIGH, corresponding to 0V and 5V on the pin for an Arduino UNO.",
	"ARD_DIGOUTPUT_DEFAULT_NAME": "DigOutput1",
	"ARD_DIGOUTPUT_WRITE": "Write to digital output",
	"ARD_DIGOUTPUT_COMPONENT": "Digital Output",
	"ARD_PWMOUTPUT": "PWM output",
	"ARD_PWMOUTPUT_TIP": "Connect a generic PWM (Pulse Width Modulation) ouput to a pwm pin, so as to write an analog value to that pin. The value written should be a number between 0 and 255, and will generate a block pulse over this pin.",
	"ARD_PWMOUTPUT_DEFAULT_NAME": "PWMOutput1",
	"ARD_PWMOUTPUT_WRITE": "Write to PWM output",
	"ARD_PWMOUTPUT_COMPONENT": "PWM Output",
	"ARD_OUTPUT_WRITE_TO": "value",
	"ARD_CONTROLS_EFFECT_TOOLTIP_1": "At the start of an effect, do some statements",
	"ARD_CONTROLS_EFFECT_TOOLTIP_2": "At the start of an effect, do some statements, and at the end of the effect too",
	"ARD_CONTROLS_EFFECT_TOOLTIP_3": "At the start of an effect, do some statements, if the effect time becomes larger than the given time, do the next statements.",
	"ARD_CONTROLS_EFFECT_TOOLTIP_4": "At the start of an effect, do some statements, if the effect time becomes larger than the given time, do the next statements. Ath end of the effect the final statements are done.",
	"ARD_CONTROLS_EFFECT_MSG_FIRST1": "Effect",
	"ARD_CONTROLS_EFFECT_MSG_FIRST2": "with total duration (ms) =",
	"ARD_CONTROLS_EFFECT_MSG_IF": "at the start do",
	"ARD_CONTROLS_EFFECT_MSG_ELSEIF": "if effect time becomes greater than",
	"ARD_CONTROLS_EFFECT_MSG_ELSE": "at the end do",
	"ARD_CONTROLS_EFFECT_ELSEIF_TOOLTIP": "Add an extra effect time at which statements must be done",
	"ARD_CONTROLS_EFFECT_ELSE_TOOLTIP": "Add a block for statements when the effect is finished.",
	"ARD_COMPONENT_BOARD": "a specific Arduino Board",
	"ARD_COMPONENT_BOARD_TIP": "Set which Arduino board you work with, and connect components to the pins.",
	"ARD_COMPONENT_BOARD_HUB_TIP": "Set the Arduino board you work with, and to what it connects",
	"ARD_PIN_DIGDIG": "digital pin1 and pin2",
	"ARD_PIN_DIGDIG_TIP": "Component requiring two digital pins, pin1 and pin2",
	"ARD_PIN_DIGDIG1": "digital pin1#",
	"ARD_PIN_DIGDIG2": "pin2#",
	"UPLOAD_CLICK_1": "To Upload your code to Arduino:",
	"UPLOAD_CLICK_2": "  1. click on the Arduino tab",
	"UPLOAD_CLICK_3": "  2. select all the code, and copy (CTRL+A and CTRL+C)",
	"UPLOAD_CLICK_4": "  3. In the Arduino IDE or in a http://codebender.cc sketch, paste the code (CTRL+V)",
	"UPLOAD_CLICK_5": "  4. Upload to your connected Arduino",
	"ARD_MD_COOKIEBUTTON_COMPONENT": "Microduino MCookie CoreUSB",
	"ARD_MD_NOSERVO": "Geen Servo gekoppeld",
	"ARD_MD_180SERVO": "0~180 degree Servo",
	"ARD_MD_360SERVO": "0~360 degree Servo",
	"ARD_MD_SERVOTYPE_TIP": "Select the type of Servo you attach to the Servo connnector",
	"ARD_MD_SERVOCON": "Servo Motor Connector.",
	"ARD_MD_SERVOCON_TOP": "Define top Servo",
	"ARD_MD_SERVOCON_BOTTOM": "Define bottom Servo",
	"ARD_MD_SERVOCON_TYPE": "Type:",
	"ARD_MD_SERVOCON_TIP": "Servo Motor Connector, can control two Servo (top and bottom). You have to give the servo a name, and what type it is (no servo attached, a 180 degree servo or a 360 degree servo.",
	"ARD_MD_SERVO_STEP_WARN1": "A Servo configuration block must be added to the hub to use this block!",
	"ARD_MD_SERVO_STEP_WARN2": "A Name input must be added to the Servo configuration block!",
	"ARD_MD_SERVO_STEP_WARN3": "Selected servo does not exist any more, please select a new one.",
	"ARD_MD_SERVO_WRITE": "set 180 degree Servo ",
	"ARD_MD_SERVO_READ": "read Servo ",
	"ARD_MD_CRASHBUTTON_COMPONENT": "Microduino Crash Button",
	"ARD_MD_CRASHBUTTON_DEFAULT_NAME": "Crashbutton1",
	"ARD_MD_CRASHBUTTON_TIP": "The microduino crash-button with which you can detect if you hit something, or that you can use as a push button.",
	"ARD_MD_SERVOTOP_DEFAULT_NAME": "TopServo1",
	"ARD_MD_SERVOBOT_DEFAULT_NAME": "BottomServo1",
	"ARD_MD_BLOCKS": "Microduino blocks: ",
	"ARD_MD_COREBLOCK": "Brain (CoreUSB)",
	"ARD_MD_COREBLOCK_TIP": "The Brain of your construction, the MCookie-CoreUSB",
	"ARD_MD_HUBBLOCK": "The Cable holder (Sensor Hub)",
	"ARD_MD_HUBBLOCK01": "connected to pins:   IIC",
	"ARD_MD_HUBBLOCK_TIP": "The Hub allows to connect up to 12 sensors to your Microduino",
	"ARD_MD_AAABLOCK": "AAA 3V Battery module",
	"ARD_MD_AAABLOCK_TIP": "The battery block for Microduino",
	"ARD_MD_AUDIOBLOCK": "Sound modules (Audio). Mode:",
	"ARD_MD_AUDIOBLOCK_TIP": "Audio Function Module, Choose a mode and a volume",
	"ARD_MD_AUDIO_REP1": "Repeat everything",
	"ARD_MD_AUDIO_REP2": "Play everything 1 time",
	"ARD_MD_AUDIO_REP3": "Repeat  1 track",
	"ARD_MD_AUDIO_REP4": "Play 1 track",
	"ARD_MD_COREWARN": "A Brain (CoreUSB) module must be added to your blocks",
	"ARD_MD_AAASOUNDWARN": "A AAA Battery module must be added to your blocks if you work with sound",
	"ARD_MD_AMPWARN": "An Amplifier module must be added to your blocks",
	"ARD_MD_AUDIOAMPWARN": "An Audio module must be added to your blocks if you work with an amplifier",
	"ARD_MD_AUDIOSOUNDWARN": "An Audio module must be added to your blocks to be able to work with music.",
	"ARD_MD_AMPBLOCK": "Loudspeaker (Amplifier) Module",
	"ARD_MD_AMPBLOCK_TIP": "Amplifier module, connect the loudspeaker to it to hear sound.",
	"ARD_MD_AUDIO_PLAYNR": "Play sound fragment",
	"ARD_MD_AUDIO_PLAY": "",
	"ARD_MD_AUDIO_PLAY_TIP": "Write the number of the sound fragment you want to play. On the this number corresponds to the order in which files have been copied to the SD Card. Best: 1/Empty the SD card 2/copy files to SD card in the order you want to play them 3/it is easier if you name the files 001.mp3, 002.mp3, ... and copy them one after the other to the card!",
	"ARD_MD_AUDIO_PAUSE": "Pause sound fragment",
	"ARD_MD_AUDIO_PAUSE_TIP": "Pause the sound fragment that is playing",
	"ARD_LEDUP_HUB": "LedUpKidz, destination: ",
	"ARD_LEDUP_HUB_TIP": "LedUpKidz is a gadget with 6 LED that you can program. There is a big prototype connected to an Arduino UNO, choose 'prototype' for code destined for this. The gadget itself works on a small attiny85 microchip, for code with that destination, select destination 'gadget'",
	"ARD_LEDUP_LED0": "LED 0",
	"ARD_LEDUP_LED1": "LED 1",
	"ARD_LEDUP_LED2": "LED 2",
	"ARD_LEDUP_LED3": "LED 3",
	"ARD_LEDUP_LED4": "LED 4",
	"ARD_LEDUP_LED5": "LED 5",
	"ARD_LEDUP_GADGET": "Gadget LedUpKidz",
	"ARD_LEDUP_PROTO": "Prototype Arduino UNO",
	"ARD_LEDUP_LED_ONOFF1": "Put LedUp LED",
	"ARD_LEDUP_LED_ONOFF2": "on? True/False:",
	"ARD_LEDUP_LED_ONOFF_TIP": "Set a given LedUpKidz light to on or off using variable blocks",
	"ARD_NO_ALLBOT": "No AllBot present",
	"ARD_ALLBOT_SERVOHUB": "AllBot Servo motor",
	"ARD_ALLBOT_HIPLEFT": "hipLeft",
	"ARD_ALLBOT_HIPRIGHT": "hipRight",
	"ARD_ALLBOT_ANKLELEFT": "ankleLeft",
	"ARD_ALLBOT_ANKLERIGHT": "ankleRight",
	"ARD_ALLBOT_HIPFRONTRIGHT": "hipFrontRight",
	"ARD_ALLBOT_HIPFRONTLEFT": "hipFrontLeft",
	"ARD_ALLBOT_HIPMIDDLERIGHT": "hipMiddleRight",
	"ARD_ALLBOT_HIPMIDDLELEFT": "hipMiddleLeft",
	"ARD_ALLBOT_HIPREARRIGHT": "hipRearRight",
	"ARD_ALLBOT_HIPREARLEFT": "hipRearLeft",
	"ARD_ALLBOT_KNEEFRONTRIGHT": "kneeFrontRight",
	"ARD_ALLBOT_KNEEFRONTLEFT": "kneeFrontLeft",
	"ARD_ALLBOT_KNEEMIDDLERIGHT": "kneeMiddleRight",
	"ARD_ALLBOT_KNEEMIDDLELEFT": "kneeMiddleLeft",
	"ARD_ALLBOT_KNEEREARRIGHT": "kneeRearRight",
	"ARD_ALLBOT_KNEEREARLEFT": "kneeRearLeft",
	"ARD_ALLBOT_ANKLEFRONTRIGHT": "ankleFrontRight",
	"ARD_ALLBOT_ANKLEFRONTLEFT": "ankleFrontLeft",
	"ARD_ALLBOT_ANKLEMIDDLERIGHT": "ankleMiddleRight",
	"ARD_ALLBOT_ANKLEMIDDLELEFT": "ankleMiddleLeft",
	"ARD_ALLBOT_ANKLEREARRIGHT": "ankleRearRight",
	"ARD_ALLBOT_ANKLEREARLEFT": "ankleRearLeft",
	"ARD_UNKNOWN_ALLBOTJOINT": "The old joint value %1 is no longer available",
	"ARD_ALLBOT_FORWARD": "AllBot Forward:",
	"ARD_ALLBOT_BACKWARD": "AllBot Backward:",
	"ARD_ALLBOT_LEFT": "AllBot Left:",
	"ARD_ALLBOT_RIGHT": "AllBot Right:",
	"ARD_ALLBOT_STEPS": "steps, stepspeed",
	"ARD_ALLBOT_WALK_TIP": "Make the allbot move a number of steps with the given speed (ms) for one step",
	"ARD_ALLBOT_LOOKLEFT": "AllBot Look Left, speed (ms):",
	"ARD_ALLBOT_LOOKRIGHT": "AllBot Look Right, speed (ms):",
	"ARD_ALLBOT_LOOK_TIP": "Make the allbot look towards a specific direction with the given speed (ms)",
	"ARD_ALLBOT_CHIRP": "AllBot Chirp:",
	"ARD_ALLBOT_CHIRPSPEED": "beeps, beepspeed",
	"ARD_ALLBOT_CHIRP_TIP": "Make the allbot chirp a number of beeps at the given speed (delay in microseconds, use 1 to 255)",
	"ARD_ALLBOT_SCARED": "AllBot Look Scared:",
	"ARD_ALLBOT_SCAREDBEEPS": "shakes, beeps:",
	"ARD_ALLBOT_SCARED_TIP": "Make the allbot shake the given number of shakes, and beep the given number of beeps ",
	"ARD_ALLBOTSERVO_WRITE": "Set AllBot Servo ",
	"ARD_ALLBOT_ANIMATE": "Animate AllBot",
	"ARD_ALLBOT_ANIMATESERVOS": "Servos",
	"ARD_ALLBOT_ANIMATESPEED": "Animation duration (ms):",
	"ARD_ALLBOT_ANIMATE_TIP": "Animate the allbot by moving different servos at the same time. Total duration of this animation can be set. A servo may have only one movement block present.",
	"ARD_ALLBOTSERVO_ANIMATE": "Move AllBot Servo ",
	"ARD_ALLBOTSERVO_ANIMATE_TIP": "Move Servo to a specified angle gradually over the animation duration. You can combine this with other servo movements",
	"ARD_ALLBOT_RC": "AllBot Remote Control Handling",
	"ARD_ALLBOT_RCCOMMANDS": "Commands ",
	"ARD_ALLBOT_RCSERIAL": "Use Serial to view Commands",
	"ARD_ALLBOT_RC_TIP": "A block to react to the AllBot Remote Control App on your smarthphone. Check Serial to see in the serial monitor what commands are received. Note: Your AllBot shield must be switched to RECEIVE after programming it.",
	"ARD_ALLBOT_RCCOMMAND": "On receiving command ",
	"ARD_ALLBOT_RCDO": "Do ",
	"ARD_ALLBOT_RCCOMMAND_SINGLE": "This block must be inside an AllBot Remote Control block ",
	"ARD_ALLBOT_RCCOMMAND_TIP": "Set the actions the AllBot must do on receiving a command.",
	"ARD_ALLBOT_RC_SPEED": "RC Speed",
	"ARD_ALLBOT_RC_SPEED_TIP": "The speed as set in the Remote Control App",
	"ARD_ALLBOT_RC_TIMES": "RC Times",
	"ARD_ALLBOT_RC_TIMES_TIP": "The times (number of steps) as set in the Remote Control App",
	"ARD_BUZZEROUTPUT": "Buzzer/Speaker",
	"ARD_BUZOUTPUT_TIP": "This component is a Buzzer or a Loudspeaker. You can connect it to a digital pin of the Arduino.",
	"ARD_BUZNOTONE": "No tone on buzzer",
	"ARD_BUZOUTPUT_DEFAULT_NAME": "MyBuzzer1",
	"ARD_BUZNOTONE_TIP": "Stop generating a tone on the buzzer",
	"ARD_BUZOUTPUT_COMPONENT": "Buzzer/Speaker",
	"ARD_BUZSETTONE": "Set tone on buzzer",
	"ARD_TONEDURATION": "and duration (ms)",
	"ARD_TONEDURATION_TIP": "Sets tone on a buzzer to the specified frequency within range 31 - 65535 and given duration in milliseconds. Careful: a durations continues, also during delays, a new tone can only be given if a previous tone is terminated!",
	"ARD_TONE_WARNING2": "A duration must be positive (>0)",
	"ARD_BUZSETPITCH": "with pitch",
	"ARD_TONEPITCH_TIP": "Sets tone on a buzzer to the specified pitch and given duration in milliseconds. Careful: a durations continues, also during delays, a new tone can only be given if a previous tone is terminated!",
	"ARD_BUZSELECTPITCH": "Pitch",
	"ARD_BUZSELECTPITCH_TIP": "Select the pitch you want. This block returns a number which is the frequency of the selected pitch.",
	"ARD_DIORAMA_BOARD_TIP": "The Ingegno Diorama board - See manual for info",
	"ARD_DIO_BOARD_MISSING": "No Diorama board present. Add it to the canvas!",
	"ARD_DIORAMA_BTN_TIP": "Diorama button code, executed in a loop once the button has been pressed",
	"ARD_DIO_STOPBTN": "Pushbutton 8: stop",
	"ARD_DIO_SOUND_TIP": "Change sound output of the Diorama board. If louder or quieter, we stop processing the button after the call.",
	"ARD_DIO_LOUDER": "Diorama: louder output",
	"ARD_DIO_LESSLOUD": "Diorama: less loud output",
	"ARD_DIO_SETLOUDNESS": "Diorama: set volume to (0-10):",
	"ARD_DIO_SOUND_WARNING": "Volume must be between 0 and 10!",
	"ARD_DIO_PLAYTRACK": "Play track number ",
	"ARD_DIO_TRACK_TIP": "If number 1, then play a track stored on SD card as 'track001.mp3'",
	"ARD_DIO_STOPTRACK": "Stop playing",
	"ARD_DIO_STOPTRACK_TIP": "Immediately stop playing the track that is playing",
	"ARD_DIO_TRACK_WARNING": "Track must be a number between 1 and 100!",
	"ARD_DIO_DISPLAYTEXT": "Show on display: ",
	"ARD_DIO_DISPLAYTEXT_TIP": "Give a text of 8 characters to show on the diorama display",
	"ARD_DIO_DISPLAYTEXT_WARNING": "Text can only be 8 long, not longer!",
	"ARD_DIO_TRACKPLAYING": "track is playing",
	"ARD_DIO_TRACKPLAYING_TIP": "Return true if a track is still playing, false otherwise",
	"ARD_DIO_RESETBTN": "stop button",
	"ARD_DIO_RESETBTN_TIP": "Reset the buttons, so no button is considered pressed.",
	"ARD_DIO_RESETBTNNR_TIP": "Stop action of the given button.",
	"ARD_COMMENT": "Comment",
	"ARD_COMMENT_TIP": "Add the given text as comment to the Arduino code",
	"NEW_INSTANCE": "New instance...",
	"RENAME_INSTANCE": "Rename instance...",
	"NEW_INSTANCE_TITLE": "New instance name:",
	"RENAME_INSTANCE_TITLE": "Rename all '%1' instances to:"
}
