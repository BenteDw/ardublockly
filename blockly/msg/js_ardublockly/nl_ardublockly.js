// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ARD_180SERVO"] = "0~180 graden Servo (hoek)";
Blockly.Msg["ARD_360SERVO"] = "0~360 graden Servo (rotatie)";
Blockly.Msg["ARD_7SEGMENT_COMPONENT"] = "7-Segment LED paneel";
Blockly.Msg["ARD_7SEGMENT_COMPONENT_TIP"] = "7-Segment LED paneel kan gebruikt worden om nummers en enkele karakters te tonen. Het bestaat uit 7 segmenten en 1 punt, en vereist daaom 8 digitale pinnen om te gebruiken. Zie de hulp voor meer info.";
Blockly.Msg["ARD_7SEGMENT_COMPONENT_WARN"] = "Pin gebruikt in segment %1 wordt ook gebruikt in een van de andere segmenten! Verander het pinnummer.";
Blockly.Msg["ARD_7SEGMENT_WRITE"] = "toon nummer";
Blockly.Msg["ARD_7SEGMENT_WRITESEG"] = "Zet segment";
Blockly.Msg["ARD_7SEGMENT_WRITESEG_TIP"] = "Zet het gegeven segment van het 7-segment led paneel aan of uit";
Blockly.Msg["ARD_7SEGMENT_WRITE_TIP"] = "Toon het gegeven nummer op het 7-segment led paneel. Nummer moet tussen 0 en 9 liggen, anders wordt niets getoond.";
Blockly.Msg["ARD_ALLBOTSERVO_ANIMATE"] = "Beweeg AllBot Servo ";
Blockly.Msg["ARD_ALLBOTSERVO_ANIMATE_TIP"] = "Beweeg de Servo soepel naar de gegeven hoek over de duur van de animatie. Je kan dit combineren met andere servo bewegingen";
Blockly.Msg["ARD_ALLBOTSERVO_WRITE"] = "Positioneer AllBot Servo ";
Blockly.Msg["ARD_ALLBOT_ANIMATE"] = "Animeer de AllBot";
Blockly.Msg["ARD_ALLBOT_ANIMATESERVOS"] = "Servos";
Blockly.Msg["ARD_ALLBOT_ANIMATESPEED"] = "Animatie duur (ms):";
Blockly.Msg["ARD_ALLBOT_ANIMATE_TIP"] = "Animeer de allbot door verschillende servos terzelfdertijd te bewegen. Totale duurtijd van deze animatie kan opgegeven worden. Er mag voor een servo maar 1 beweegblok aanwezig zijn";
Blockly.Msg["ARD_ALLBOT_ANKLEFRONTLEFT"] = "enkelFrontLinks";
Blockly.Msg["ARD_ALLBOT_ANKLEFRONTRIGHT"] = "enkelFrontRechts";
Blockly.Msg["ARD_ALLBOT_ANKLELEFT"] = "enkelLinks";
Blockly.Msg["ARD_ALLBOT_ANKLEMIDDLELEFT"] = "enkelMiddenLinks";
Blockly.Msg["ARD_ALLBOT_ANKLEMIDDLERIGHT"] = "enkelMiddenRechts";
Blockly.Msg["ARD_ALLBOT_ANKLEREARLEFT"] = "enkelAchterLinks";
Blockly.Msg["ARD_ALLBOT_ANKLEREARRIGHT"] = "enkelAchterRechts";
Blockly.Msg["ARD_ALLBOT_ANKLERIGHT"] = "enkelRechts";
Blockly.Msg["ARD_ALLBOT_BACKWARD"] = "AllBot Achteruit:";
Blockly.Msg["ARD_ALLBOT_CHIRP"] = "AllBot Tsjilp:";
Blockly.Msg["ARD_ALLBOT_CHIRPSPEED"] = "beeps, beepsnelheid";
Blockly.Msg["ARD_ALLBOT_CHIRP_TIP"] = "Laat de allbot een aantal keer tsjilpen aan de gegeven snelheid (en vertraging in microseconden, gebruik 1 tot 255)";
Blockly.Msg["ARD_ALLBOT_FORWARD"] = "AllBot Vooruit:";
Blockly.Msg["ARD_ALLBOT_HIPFRONTLEFT"] = "heupFrontLinks";
Blockly.Msg["ARD_ALLBOT_HIPFRONTRIGHT"] = "heupFrontRechts";
Blockly.Msg["ARD_ALLBOT_HIPLEFT"] = "heupLinks";
Blockly.Msg["ARD_ALLBOT_HIPMIDDLELEFT"] = "heupMiddenLinks";
Blockly.Msg["ARD_ALLBOT_HIPMIDDLERIGHT"] = "heupMiddenRechts";
Blockly.Msg["ARD_ALLBOT_HIPREARLEFT"] = "heupAchterLinks";
Blockly.Msg["ARD_ALLBOT_HIPREARRIGHT"] = "heupAchterRechts";
Blockly.Msg["ARD_ALLBOT_HIPRIGHT"] = "heupRechts";
Blockly.Msg["ARD_ALLBOT_KNEEFRONTLEFT"] = "knieFrontLinks";
Blockly.Msg["ARD_ALLBOT_KNEEFRONTRIGHT"] = "knieFrontRechts";
Blockly.Msg["ARD_ALLBOT_KNEEMIDDLELEFT"] = "knieMiddenLinks";
Blockly.Msg["ARD_ALLBOT_KNEEMIDDLERIGHT"] = "knieMiddenRechts";
Blockly.Msg["ARD_ALLBOT_KNEEREARLEFT"] = "knieAchterLinks";
Blockly.Msg["ARD_ALLBOT_KNEEREARRIGHT"] = "knieAchterRechts";
Blockly.Msg["ARD_ALLBOT_LEFT"] = "AllBot Links:";
Blockly.Msg["ARD_ALLBOT_LOOKLEFT"] = "AllBot Kijk Links, snelheid (ms):";
Blockly.Msg["ARD_ALLBOT_LOOKRIGHT"] = "AllBot Kijk Rechts, snelheid (ms):";
Blockly.Msg["ARD_ALLBOT_LOOK_TIP"] = "Laat de allbot in een bepaalde richting kijken aan de gegeven snelheid in milliseconden";
Blockly.Msg["ARD_ALLBOT_RC"] = "AllBot Afstandsbediening Verwerken";
Blockly.Msg["ARD_ALLBOT_RCCOMMAND"] = "Bij ontvangen commando ";
Blockly.Msg["ARD_ALLBOT_RCCOMMANDS"] = "Commando's ";
Blockly.Msg["ARD_ALLBOT_RCCOMMAND_SINGLE"] = "Dit blok moet deel zijn van een AllBot Remote Control blok!";
Blockly.Msg["ARD_ALLBOT_RCCOMMAND_TIP"] = "Bepaal welke acties je AllBot moet doen bij het ontvangen van een commando.";
Blockly.Msg["ARD_ALLBOT_RCDO"] = "Doe ";
Blockly.Msg["ARD_ALLBOT_RCSERIAL"] = "Gebruik Serial om de commando's te zien";
Blockly.Msg["ARD_ALLBOT_RC_SPEED"] = "RC Snelheid";
Blockly.Msg["ARD_ALLBOT_RC_SPEED_TIP"] = "De snelheid zoals gezet in de Afstandsbediening App";
Blockly.Msg["ARD_ALLBOT_RC_TIMES"] = "RC Aantal";
Blockly.Msg["ARD_ALLBOT_RC_TIMES_TIP"] = "Het aantal (aantal stappen) zoals gezet in de Afstandsbediening App";
Blockly.Msg["ARD_ALLBOT_RC_TIP"] = "Een blok om te reageren op commando's van de AllBot Remote Control App op je GSM. Vink Serial aan indien je de seriele monitor wil gebruiken om de commando's te inspecteren. PS: Je AllBot shield schakelaar moet in toestand RECEIVE gezet worden om commando's te kunnen ontvangen nadat je programma opgeladen hebt.";
Blockly.Msg["ARD_ALLBOT_RIGHT"] = "AllBot Rechts:";
Blockly.Msg["ARD_ALLBOT_SCARED"] = "AllBot Angstig Kijken:";
Blockly.Msg["ARD_ALLBOT_SCAREDBEEPS"] = "rillingen, beeps:";
Blockly.Msg["ARD_ALLBOT_SCARED_TIP"] = "Laat de allbot een aantal keer rillen, en beepen";
Blockly.Msg["ARD_ALLBOT_SERVOHUB"] = "AllBot Servo motor";
Blockly.Msg["ARD_ALLBOT_STEPS"] = "stappen, stapsnelheid";
Blockly.Msg["ARD_ALLBOT_WALK_TIP"] = "Laat de allbot een aantal stappen maken in de gegeven snelheid (ms) per stap";
Blockly.Msg["ARD_ANALOGREAD"] = "lees analoge pin#";
Blockly.Msg["ARD_ANALOGREAD_TIP"] = "Geeft waarde terug tussen 0 and 1024 zoals gelezen op de analoge PIN";
Blockly.Msg["ARD_ANALOGWRITE"] = "schrijf naar analoge pin#";
Blockly.Msg["ARD_ANALOGWRITE_ERROR"] = "The analogue value set must be between 0 and 255";
Blockly.Msg["ARD_ANALOGWRITE_TIP"] = "Schrijf analoge waarde tussen 0 en 255 naar de opgegeven PWM PIN";
Blockly.Msg["ARD_ANASENSOR"] = "Analoge Sensor";
Blockly.Msg["ARD_ANASENSOR_COMPONENT"] = "Analoge Sensor";
Blockly.Msg["ARD_ANASENSOR_DEFAULT_NAME"] = "AnaSensor1";
Blockly.Msg["ARD_ANASENSOR_READ"] = "Lees analoge sensor";
Blockly.Msg["ARD_ANASENSOR_TIP"] = "Connecteer een analoge sensor aan een analoge pin op een hub, en lees zijn waarde. Bij een Arduino UNO verkrijg je bij lezen een waarde tussen 0 en 1024, welke overeenkomt met een gemeten waarde tussen 0 en 5V. Bv.: een LDR sensor, een potmeter, ...";
Blockly.Msg["ARD_ARRAY_CREATE_LENGTH"] = "met lengte";
Blockly.Msg["ARD_ARRAY_CREATE_LENGTH_TOOLTIP"] = "Maak een lijst met het gegeven nummer aan elementen";
Blockly.Msg["ARD_ARRAY_CREATE_TITLE"] = "lijst";
Blockly.Msg["ARD_ARRAY_CREATE_TITLE0"] = "Maak";
Blockly.Msg["ARD_ARRAY_CREATE_TITLE2"] = "met waarden";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lijst";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_CONTAINER_TOOLTIP"] = "Voeg toe, verwijder, of herorden secties om het lijst block te wijzigen.";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_INPUT_WITH"] = "Maak een lijst met";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_ITEM_TITLE"] = "item";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_ITEM_TOOLTIP"] = "Voeg een item toe aan de lijst.";
Blockly.Msg["ARD_ARRAY_CREATE_WITH_TOOLTIP"] = "Maak een lijst met gegeven items";
Blockly.Msg["ARD_ARRAY_DEFAULT_NAME"] = "Lijst1";
Blockly.Msg["ARD_ARRAY_GETINDEX_AT"] = "neem element met index";
Blockly.Msg["ARD_ARRAY_GETINDEX_ITEM"] = "in lijst";
Blockly.Msg["ARD_ARRAY_GETINDEX_TOOLTIP"] = "Verkrijg een element in de lijst op een bepaalde index. Index moet getal zijn van nul tot en met de lengte min 1!";
Blockly.Msg["ARD_ARRAY_GETLENGTH"] = "Lengte van lijst";
Blockly.Msg["ARD_ARRAY_GETLENGTH_TOOLTIP"] = "Bekom de lengte (=aantal elementen) van de geselecteerde lijst";
Blockly.Msg["ARD_ARRAY_IND_ERR1"] = "Index moet nummer zijn >= 0";
Blockly.Msg["ARD_ARRAY_IND_ERR2"] = "Index moet nummer zijn < lengte lijst";
Blockly.Msg["ARD_ARRAY_LEN_ERR1"] = "Lengte van een lijst moet 1 of meer zijn";
Blockly.Msg["ARD_ARRAY_LEN_ERR2"] = "Lengte van een lijst moet een geheel getal zijn";
Blockly.Msg["ARD_ARRAY_LEN_ERR3"] = "Lengte van een lijst moet een nummer zijn, niet een variabele";
Blockly.Msg["ARD_ARRAY_NOT_FLOAT"] = "Een van de gegeven waarden is geen numerieke waarde";
Blockly.Msg["ARD_ARRAY_NOT_INT"] = "Een van de gegeven waarden is geen geheel getal";
Blockly.Msg["ARD_ARRAY_NOT_KNOWN"] = "Ongekend type lijst gegeven";
Blockly.Msg["ARD_ARRAY_NOT_NUMBER"] = "Gebruik alleen nummers, niet variabelen, als je een lijst definieerd!";
Blockly.Msg["ARD_ARRAY_SETINDEX_AT"] = "het element met index";
Blockly.Msg["ARD_ARRAY_SETINDEX_ITEM"] = "Stel in lijst";
Blockly.Msg["ARD_ARRAY_SETINDEX_TOOLTIP"] = "Stel het element in the lijst op de gegeven index belijk aan de gegeven waarde.Index moet getal zijn van nul tot en met de lengte min 1!";
Blockly.Msg["ARD_ARRAY_SETINDEX_VALUE"] = "gelijk aan";
Blockly.Msg["ARD_AS_ANAINPUT_PIN"] = "als analoge input";
Blockly.Msg["ARD_AS_ANAINPUT_PIN_TIP"] = "Definieer een variabele als een pin voor analoge input";
Blockly.Msg["ARD_AS_ANAOUTPUT_PIN"] = "als analoge output";
Blockly.Msg["ARD_AS_ANAOUTPUT_PIN_TIP"] = "Definieer een variabele als een pin voor analoge PWM output";
Blockly.Msg["ARD_AS_BOOL_NUMBER"] = "als boolean";
Blockly.Msg["ARD_AS_BOOL_NUMBER_TIP"] = "Definieer een variabele als boolean getal met waarde waar of vals";
Blockly.Msg["ARD_AS_DIGINPUT_PIN"] = "als digitale input";
Blockly.Msg["ARD_AS_DIGINPUT_PIN_TIP"] = "Definieer een variabele als een pin voor digitale input";
Blockly.Msg["ARD_AS_DIGOUTPUT_PIN"] = "als digitale output";
Blockly.Msg["ARD_AS_DIGOUTPUT_PIN_TIP"] = "Definieer een variabele als een pin voor digitale output";
Blockly.Msg["ARD_AS_FLOAT_NUMBER"] = "als decimaal getal";
Blockly.Msg["ARD_AS_FLOAT_NUMBER_TIP"] = "Definieer een variabele als decimaal getal, vb 3.6 of 5e4 of -3.14";
Blockly.Msg["ARD_AS_INTEGER_NUMBER"] = "als geheel getal";
Blockly.Msg["ARD_AS_INTEGER_NUMBER_TIP"] = "Definieer een variabele als geheel getal, -32768 to 32767";
Blockly.Msg["ARD_AS_LONG_NUMBER"] = "als lang geheel getal";
Blockly.Msg["ARD_AS_LONG_NUMBER_TIP"] = "Definieer een variabele als lang geheel getal, -2,147,483,648 to 2,147,483,647";
Blockly.Msg["ARD_AS_UINT_NUMBER"] = "als positief geheel getal";
Blockly.Msg["ARD_AS_UINT_NUMBER_TIP"] = "Definieer een variabele als positief geheel getalr, 0 to 65535";
Blockly.Msg["ARD_AS_ULONG_NUMBER"] = "als lang positief geheel getal";
Blockly.Msg["ARD_AS_ULONG_NUMBER_TIP"] = "Definieer een variabele als positief lang geheel getal, 0 to 4,294,967,295";
Blockly.Msg["ARD_BLOCKS"] = "Je hebt twee keer dit blok staan. Dat is 1 keer teveel!";
Blockly.Msg["ARD_BOARD"] = "Platform";
Blockly.Msg["ARD_BOARD_WARN"] = "Dit blok vereist als chip %1, maar of een duplicaat is al aanwezig, of een ander blok is aanwezig welke een andere Arduino chip vereist";
Blockly.Msg["ARD_BTHUB_READCODE"] = "BlueTooth Code received from";  // untranslated
Blockly.Msg["ARD_BTHUB_TIP"] = "Blok die aanduidt dat aan twee Arduino pinnen een BlueTooth type sensor is bevestigd";
Blockly.Msg["ARD_BT_COLOUR_TOOLTIP"] = "is dit een kleur in het formaat xxx.xxx.xxx";
Blockly.Msg["ARD_BT_COMPONENT"] = "BlueTooth ontvanger";
Blockly.Msg["ARD_BT_DEFAULT_NAME"] = "BT_Sensor";
Blockly.Msg["ARD_BT_EFFECT1"] = "is effect 1";
Blockly.Msg["ARD_BT_EFFECT2"] = "is effect 2";
Blockly.Msg["ARD_BT_EFFECT3"] = "is effect 3";
Blockly.Msg["ARD_BT_EFFECT4"] = "is effect 4";
Blockly.Msg["ARD_BT_EFFECT5"] = "is effect 5";
Blockly.Msg["ARD_BT_EFFECT6"] = "is effect 6";
Blockly.Msg["ARD_BT_EFFECT7"] = "is effect 7";
Blockly.Msg["ARD_BT_EFFECT8"] = "is effect 8";
Blockly.Msg["ARD_BT_EFFECT_TOOLTIP"] = "test of de code %1 een effect is";
Blockly.Msg["ARD_BT_READCODEAPP_TIP"] = "Lees de code gestuurd door de app en ontvangen door de BlueTooth sensor";
Blockly.Msg["ARD_BT_READCODEFROM"] = "Lees de code van";
Blockly.Msg["ARD_BT_READCODE_TIP"] = "Lees de code ontvangen door de BlueTooth sensor";
Blockly.Msg["ARD_BT_TEXT_ISBRIGHTNESS_TITLE"] = "%1 is helderheid";
Blockly.Msg["ARD_BT_TEXT_ISBRIGHTNESS_TOOLTIP"] = "is %1 helderheid waarde (0 --> 100)";
Blockly.Msg["ARD_BT_TEXT_ISCOLOUR_TITLE"] = "%1 is een kleur";
Blockly.Msg["ARD_BT_TEXT_ISCOLOUR_TOOLTIP"] = "is een kleur code";
Blockly.Msg["ARD_BUILTIN_LED"] = "schrijf naar ingebouwde LED";
Blockly.Msg["ARD_BUILTIN_LED_TIP"] = "Licht aan of uit voor de ingebouwde LED op de Arduino";
Blockly.Msg["ARD_BUTTON_COMPONENT"] = "Drukknop";
Blockly.Msg["ARD_BUTTON_DEFAULT_NAME"] = "Drukknop1";
Blockly.Msg["ARD_BUTTON_IFPUSHED"] = "Als ingedrukt meten we waarde";
Blockly.Msg["ARD_BUTTON_INPUT_CLICK"] = " geklikt wordt";
Blockly.Msg["ARD_BUTTON_INPUT_IF"] = "Als knop";
Blockly.Msg["ARD_BUTTON_INPUT_LONGCLICK"] = "lang geklikt wordt";
Blockly.Msg["ARD_BUTTON_INPUT_PRESSED"] = "ingedrukt wordt";
Blockly.Msg["ARD_BUTTON_INPUT_PULLUP_COMPONENT"] = "Drukknop 2-draads, geen weerstand";
Blockly.Msg["ARD_BUTTON_INPUT_PULLUP_TIP"] = "Een drukknop die AAN of UIT kan zijn, geconnecteerd met de Arduino via 2 draden: GND, en een digitale pin";
Blockly.Msg["ARD_BUTTON_INPUT_THEN"] = "dan";
Blockly.Msg["ARD_BUTTON_INPUT_TIP"] = "Controleer de input ontvangen op de knop, en reageer erop. Deze functie blokkeert je programma niet als je niet aanvinkt dat er moet gewacht worden op een klik. Klikken is drukken en loslaten, lang klikken is drukken en wat wachten voor loslaten, indrukken is zodra de knop ingedrukt is.";
Blockly.Msg["ARD_BUTTON_INPUT_WAIT"] = "wacht tot een klik gebeurt";
Blockly.Msg["ARD_BUTTON_READ"] = "Lees waarde knop";
Blockly.Msg["ARD_BUTTON_TIP"] = "Een drukknop die AAN of UIT kan zijn, geconnecteerd met de Arduino via 3 draden: GND, 5V over een weerstand, en een digitale pin";
Blockly.Msg["ARD_BUZNOTONE"] = "Stop toon op buzzer";
Blockly.Msg["ARD_BUZNOTONE_TIP"] = "Stop met een toon spelen op de buzzer";
Blockly.Msg["ARD_BUZOUTPUT_COMPONENT"] = "Buzzer/Luidspreker";
Blockly.Msg["ARD_BUZOUTPUT_DEFAULT_NAME"] = "MijnBuzzer1";
Blockly.Msg["ARD_BUZOUTPUT_TIP"] = "Deze component is een Buzzer of een Luidspreker. Je kan hem met een digitale pin van de Arduino verbinden";
Blockly.Msg["ARD_BUZSELECTPITCH"] = "Toonhoogte";
Blockly.Msg["ARD_BUZSELECTPITCH_TIP"] = "Selecteer de toonhoogte die je wenst. Dit blok geeft je het nummer welke de frequentie is van de geselecteerde toonhoogte.";
Blockly.Msg["ARD_BUZSETPITCH"] = "met toonhoogte";
Blockly.Msg["ARD_BUZSETTONE"] = "Speel een toon op buzzer";
Blockly.Msg["ARD_BUZZEROUTPUT"] = "Buzzer/Luidspreker";
Blockly.Msg["ARD_COMMENT"] = "Commentaar";
Blockly.Msg["ARD_COMMENT_TIP"] = "Voeg de gegeven tekst als commentaar toe aan de Arduino code";
Blockly.Msg["ARD_COMPONENT_BOARD"] = "een bepaald Arduino Bord";
Blockly.Msg["ARD_COMPONENT_BOARD_HUB_TIP"] = "Defineer welk Arduino bord je gebruikt, en met wat het geconnecteerd is.";
Blockly.Msg["ARD_COMPONENT_BOARD_TIP"] = "Defineer welk Arduino bord je gebruikt, en connecteer componenten met de pinnen van de Arduino.";
Blockly.Msg["ARD_COMPONENT_WARN1"] = "Een %1 Definieer blok met dezelfde %2 naam moet toegevoegd worden om dit blok te gebruiken!";
Blockly.Msg["ARD_CONTROLS_EFFECT_ELSEIF_TOOLTIP"] = "Voeg een extra effect tijd toe om opdrachten bij uit te voeren";
Blockly.Msg["ARD_CONTROLS_EFFECT_ELSE_TOOLTIP"] = "Voeg een blok toe voor als effect gedaan is";
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_ELSE"] = "op einde doe";
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_ELSEIF"] = "als effect tijd groter wordt dan";
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_FIRST1"] = "Effect";
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_FIRST2"] = "met totale duurtijd (ms) =";
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_IF"] = "bij start doe";
Blockly.Msg["ARD_CONTROLS_EFFECT_TOOLTIP_1"] = "Aan de start van een effect doen we enkele opdrachten";
Blockly.Msg["ARD_CONTROLS_EFFECT_TOOLTIP_2"] = "Aan de start van een effect doen we enkele opdrachten, en aan het einde ook";
Blockly.Msg["ARD_CONTROLS_EFFECT_TOOLTIP_3"] = "Aan de start van een effect doen we enkele opdrachten, als de effect tijd groter wordt dan de gegeven waarde, worden de volgende opdrachten uitgevoerd.";
Blockly.Msg["ARD_CONTROLS_EFFECT_TOOLTIP_4"] = "Aan de start van een effect doen we enkele opdrachten, als de effect tijd groter wordt dan de gegeven waarde, worden de volgende opdrachten uitgevoerd. Aan het einde worden de laatste opdrachten uitgevoerd.";
Blockly.Msg["ARD_DEFINE"] = "Definieer";
Blockly.Msg["ARD_DHTHUB"] = "Temperatuur en vochtigheid sensor";
Blockly.Msg["ARD_DHTHUB_READHEATINDEX"] = "°C gevoelstemperatuur gemeten met";
Blockly.Msg["ARD_DHTHUB_READRH"] = "Relatieve Vochtigheid gemeten met";
Blockly.Msg["ARD_DHTHUB_READTEMP"] = "°C temperatuur gemeten met";
Blockly.Msg["ARD_DHTHUB_TIP"] = "Blok die aanduidt dat aan een Arduino pin een DHT type sensor is bevestigd";
Blockly.Msg["ARD_DHT_COMPONENT"] = "DHT sensor";
Blockly.Msg["ARD_DHT_DEFAULT_NAME"] = "TempRH_Sensor";
Blockly.Msg["ARD_DHT_READHEATINDEX_TIP"] = "Berekent de hitte index (gevoelstemperatuur) in graden Celcius van de DHT sensor";
Blockly.Msg["ARD_DHT_READRH_TIP"] = "Meet de RV (Relatieve Vochtigheid in %) als een waarde van 0 tot 100 van de DHT sensor";
Blockly.Msg["ARD_DHT_READTEMP_TIP"] = "Meet de temperatuur in graden Celcius van de DHT sensor";
Blockly.Msg["ARD_DIGINPUT"] = "Digital Input";
Blockly.Msg["ARD_DIGINPUT_COMPONENT"] = "Digitale Input";
Blockly.Msg["ARD_DIGINPUT_DEFAULT_NAME"] = "DigInput1";
Blockly.Msg["ARD_DIGINPUT_READ"] = "Lees digitale input";
Blockly.Msg["ARD_DIGINPUT_TIP"] = "Connecteer een digitale input aan een digitale pin op een hub, en lees zijn waarde. Bij een Arduino UNO verkrijg je bij lezen een waarde HIGH of LOW wat overeenkomt met 0 en 5V.";
Blockly.Msg["ARD_DIGITALREAD"] = "lees digitale pin#";
Blockly.Msg["ARD_DIGITALREAD_TIP"] = "Geeft waarde terug gelezen op de digitale PIN: HOOG of LAAG";
Blockly.Msg["ARD_DIGITALWRITE"] = "schrijf naar digitale pin#";
Blockly.Msg["ARD_DIGITALWRITEVAR_TIP"] = "Schrijf digitale waarde HOOG of LAAG naar een gegeven PIN, de waarde en de pin kunnen berekende variabelen zijn";
Blockly.Msg["ARD_DIGITALWRITE_TIP"] = "Schrijf digitale waarde HOOG of LAAG naar de opgegeven PIN";
Blockly.Msg["ARD_DIGOUTPUT"] = "Digitale output";
Blockly.Msg["ARD_DIGOUTPUT_COMPONENT"] = "Digitale Output";
Blockly.Msg["ARD_DIGOUTPUT_DEFAULT_NAME"] = "DigOutput1";
Blockly.Msg["ARD_DIGOUTPUT_TIP"] = "Connecteer een digitale output aan een digitale pin op een hub, en schrijf naar die pin. De digitale toestend kan LOW of HIGH zijn, welke overeenkomt met 0V en 5V op die pin voor een Arduino UNO.";
Blockly.Msg["ARD_DIGOUTPUT_WRITE"] = "Schrijf naar digital output";
Blockly.Msg["ARD_DIORAMA_BOARD_TIP"] = "Het Ingegno Diorama bord - Zie handleiding voor info";
Blockly.Msg["ARD_DIORAMA_BTN_TIP"] = "Diorama drukknop code. Deze wordt uitgevoerd in een lus eenmaal de knop ingedrukt wordt.";
Blockly.Msg["ARD_DIO_BOARD_MISSING"] = "Geen Diorama bord aanwezig. Voeg het toe aan de canvas!";
Blockly.Msg["ARD_DIO_DISPLAYTEXT"] = "Toon op de display: ";
Blockly.Msg["ARD_DIO_DISPLAYTEXT_TIP"] = "Geef een tekst van 8 karakters om te tonen op de diorama display";
Blockly.Msg["ARD_DIO_DISPLAYTEXT_WARNING"] = "Tekst mag maximaal 8 lang zijn, niet langer!";
Blockly.Msg["ARD_DIO_LESSLOUD"] = "Diorama: minder volume";
Blockly.Msg["ARD_DIO_LOUDER"] = "Diorama: meer volume";
Blockly.Msg["ARD_DIO_PLAYTRACK"] = "Speel audiofragment nummer ";
Blockly.Msg["ARD_DIO_RESETBTN"] = "stop knoppen";
Blockly.Msg["ARD_DIO_RESETBTNNR_TIP"] = "Stop acties van de gegeven knop.";
Blockly.Msg["ARD_DIO_RESETBTN_TIP"] = "Reset de knoppen, zodat geen enkele knop als ingedrukt verondersteld wordt";
Blockly.Msg["ARD_DIO_SETLOUDNESS"] = "Diorama: zet volume op (0-10):";
Blockly.Msg["ARD_DIO_SOUND_TIP"] = "Verander volume van het Diorama bord. Als luider of stiller stoppen we de knoppen achteraf.";
Blockly.Msg["ARD_DIO_SOUND_WARNING"] = "Volume moet een getal tussen 0 en 10 zijn!";
Blockly.Msg["ARD_DIO_STOPBTN"] = "Drukknop 8: stop";
Blockly.Msg["ARD_DIO_STOPTRACK"] = "Stop audiofragment";
Blockly.Msg["ARD_DIO_STOPTRACK_TIP"] = "Stop onmiddellijk met afspelen van het audiofragment";
Blockly.Msg["ARD_DIO_TRACKPLAYING"] = "audiofragment wordt afgespeeld";
Blockly.Msg["ARD_DIO_TRACKPLAYING_TIP"] = "Waar als een audiofragment wordt afgespeeld, anders onwaar";
Blockly.Msg["ARD_DIO_TRACK_TIP"] = "Als nummer 1, speel dan audiofragment opgeslagen op de SD kaart als 'track001.mp3'";
Blockly.Msg["ARD_DIO_TRACK_WARNING"] = "Audiofragment moet een getal tussen 1 en 100 zijn!";
Blockly.Msg["ARD_FUN_RUN_DECL"] = "Arduino definieer vooraf:";
Blockly.Msg["ARD_FUN_RUN_DECL_TIP"] = "Code die je vooraf wil declareren (gebruik dit bv. voor variabelen die je nodig zult hebben in de setup).";
Blockly.Msg["ARD_FUN_RUN_LOOP"] = "Arduino herhaal voor altijd:";
Blockly.Msg["ARD_FUN_RUN_SETUP"] = "Arduino doe eerst:";
Blockly.Msg["ARD_FUN_RUN_TIP"] = "Definieer de Arduino setup() en loop() functies.";
Blockly.Msg["ARD_HIGH"] = "HOOG";
Blockly.Msg["ARD_HIGHLOW_TIP"] = "Plaats een pin status op HOOG of LAAG.";
Blockly.Msg["ARD_IRHUB"] = "IR sensor";
Blockly.Msg["ARD_IRHUB_READCODE"] = "IR Code ontvangen van";
Blockly.Msg["ARD_IRHUB_TIP"] = "Blok die aanduidt dat aan een Arduino pin een IR type sensor is bevestigd";
Blockly.Msg["ARD_IR_COMPONENT"] = "IR sensor";
Blockly.Msg["ARD_IR_DEFAULT_NAME"] = "IR_Receiver";
Blockly.Msg["ARD_IR_READCODE_TIP"] = "Lees de code ontvangen door de IR sensor";
Blockly.Msg["ARD_LEDLEG"] = "LED";
Blockly.Msg["ARD_LEDLEGNEG"] = "min";
Blockly.Msg["ARD_LEDLEGPOL"] = "been polariteit";
Blockly.Msg["ARD_LEDLEGPOS"] = "plus";
Blockly.Msg["ARD_LEDLEG_COMPONENT"] = "LED";
Blockly.Msg["ARD_LEDLEG_DEFAULT_NAME"] = "Led_1";
Blockly.Msg["ARD_LEDLEG_OFF"] = "UIT";
Blockly.Msg["ARD_LEDLEG_ON"] = "AAN";
Blockly.Msg["ARD_LEDLEG_SET"] = "Zet LED";
Blockly.Msg["ARD_LEDLEG_TIP"] = "Een LED licht, een van de beentjes (de positieve of de negatieve) is verbonden aan de Arduino. Kan AAN of UIT zijn.";
Blockly.Msg["ARD_LEDUP_GADGET"] = "Gadget LedUpKidz";
Blockly.Msg["ARD_LEDUP_HUB"] = "LedUpKidz, bestemming: ";
Blockly.Msg["ARD_LEDUP_HUB_TIP"] = "LedUpKidz is een gadget met 6 LED die je kunt programmeren. Er is een groot prototype via een Arduino UNO, kies prototype voor code daarvoor bestemd. Het gadget werkt op een kleine attiny85 microchip, voor code die daarop werkt, kies bestemming gadget.";
Blockly.Msg["ARD_LEDUP_LED0"] = "LED 0";
Blockly.Msg["ARD_LEDUP_LED1"] = "LED 1";
Blockly.Msg["ARD_LEDUP_LED2"] = "LED 2";
Blockly.Msg["ARD_LEDUP_LED3"] = "LED 3";
Blockly.Msg["ARD_LEDUP_LED4"] = "LED 4";
Blockly.Msg["ARD_LEDUP_LED5"] = "LED 5";
Blockly.Msg["ARD_LEDUP_LED_ONOFF1"] = "Zet LedUp LED";
Blockly.Msg["ARD_LEDUP_LED_ONOFF2"] = "aan? Waar/Onwaar:";
Blockly.Msg["ARD_LEDUP_LED_ONOFF_TIP"] = "Een gegeven LedUpKidz licht aan of uit zetten via variabelen.";
Blockly.Msg["ARD_LEDUP_PROTO"] = "Prototype Arduino UNO";
Blockly.Msg["ARD_LOW"] = "LAAG";
Blockly.Msg["ARD_MAP"] = "Herschaal";
Blockly.Msg["ARD_MAP_TIP"] = "Herschaalt een getal in interval [0-1024] naar een ander getal in de gegeven schaal.";
Blockly.Msg["ARD_MAP_VAL"] = "waarde naar [0-";
Blockly.Msg["ARD_MD_180SERVO"] = "0~180 graden Servo";
Blockly.Msg["ARD_MD_360SERVO"] = "0~360 graden Servo";
Blockly.Msg["ARD_MD_AAABLOCK"] = "AAA 3V Batterij module";
Blockly.Msg["ARD_MD_AAABLOCK_TIP"] = "Het batterij blok voor Microduino";
Blockly.Msg["ARD_MD_AAASOUNDWARN"] = "Een AAA Batterij module moet toegevoegd worden aan je blokken als je met geluid werkt";
Blockly.Msg["ARD_MD_AMPBLOCK"] = "Luidspreker (Amplifier Module)";
Blockly.Msg["ARD_MD_AMPBLOCK_TIP"] = "Amplifier module, koppel de luidspreker aan deze module om geluid te horen.";
Blockly.Msg["ARD_MD_AMPWARN"] = "Een Luidspreker module (Amplifier) moet toegevoegd worden aan je blokken";
Blockly.Msg["ARD_MD_AUDIOAMPWARN"] = "Een Audio module moet toegevoegd worden aan je blokken om met de luidspreker te werken";
Blockly.Msg["ARD_MD_AUDIOBLOCK"] = "Geluidsmodules (Audio). Mode:";
Blockly.Msg["ARD_MD_AUDIOBLOCK_TIP"] = "Audio Functie Module, kies een mode en een volume";
Blockly.Msg["ARD_MD_AUDIOSOUNDWARN"] = "Een Audio module moet toegevoegd worden aan je blokken om met muziek te kunnen werken.";
Blockly.Msg["ARD_MD_AUDIO_PAUSE"] = "Geluidsfragment pauzeren";
Blockly.Msg["ARD_MD_AUDIO_PAUSE_TIP"] = "Pauzeer het geluidsfragment dat aan het afspelen is";
Blockly.Msg["ARD_MD_AUDIO_PLAY"] = "afspelen";
Blockly.Msg["ARD_MD_AUDIO_PLAYNR"] = "Geluidsfragment";
Blockly.Msg["ARD_MD_AUDIO_PLAY_TIP"] = "Schrijf het nummer van het  geluidsfragmentje dat je wilt afspelen. Op de SD kaart komt dit nummer overeen met de orde in dewelke je bestanden naar de kaart hebt gekopieerd. Best: 1/ maak de SD kaart leeg 2/kopieer bestanden naar de SD kaart in de orde die je wil luisteren 3/het is makkelijker voor jou als je de bestanden 001.mp3, 002.mp3, ... noemt en in die orde naar de SD kaart kopieert.";
Blockly.Msg["ARD_MD_AUDIO_REP1"] = "Herhaal alles";
Blockly.Msg["ARD_MD_AUDIO_REP2"] = "Speel alles 1 keer";
Blockly.Msg["ARD_MD_AUDIO_REP3"] = "Herhaal 1 track";
Blockly.Msg["ARD_MD_AUDIO_REP4"] = "Speel 1 track";
Blockly.Msg["ARD_MD_BLOCKS"] = "Microduino blokken: ";
Blockly.Msg["ARD_MD_COOKIEBUTTON_COMPONENT"] = "Microduino MCookie CoreUSB";
Blockly.Msg["ARD_MD_COREBLOCK"] = "Brein (CoreUSB)";
Blockly.Msg["ARD_MD_COREBLOCK_TIP"] = "Het Brein van je constructie, de MCookie-CoreUSB";
Blockly.Msg["ARD_MD_COREWARN"] = "Een Brein (CoreUSB) module moet toegevoegd worden aan je blokken";
Blockly.Msg["ARD_MD_CRASHBUTTON_COMPONENT"] = "Microduino Crash Knop";
Blockly.Msg["ARD_MD_CRASHBUTTON_DEFAULT_NAME"] = "Crashknop1";
Blockly.Msg["ARD_MD_CRASHBUTTON_TIP"] = "De microduino crash-knop waarmee je detecteert of je iets raakt, of die je als drukknop kunt gebruiken";
Blockly.Msg["ARD_MD_HUBBLOCK"] = "De kabelhouder (Sensor Hub)";
Blockly.Msg["ARD_MD_HUBBLOCK01"] = "verbonden met ingang:   IIC";
Blockly.Msg["ARD_MD_HUBBLOCK_TIP"] = "De Hub laat je toe 12 sensoren te koppelen aan je Microduino";
Blockly.Msg["ARD_MD_NOSERVO"] = "Geen Servo gekoppeld";
Blockly.Msg["ARD_MD_SERVOBOT_DEFAULT_NAME"] = "BodemServo1";
Blockly.Msg["ARD_MD_SERVOCON"] = "Servo Motor Connector.";
Blockly.Msg["ARD_MD_SERVOCON_BOTTOM"] = "Defineer onder Servo";
Blockly.Msg["ARD_MD_SERVOCON_TIP"] = "Servo Motor Connector, kan twee servo sturen (boven en onder). Een servo dien je een naam te geven, en het type op te geven (geen servo, 180 graden servo of 360 graden servo)";
Blockly.Msg["ARD_MD_SERVOCON_TOP"] = "Defineer boven Servo";
Blockly.Msg["ARD_MD_SERVOCON_TYPE"] = "Type:";
Blockly.Msg["ARD_MD_SERVOTOP_DEFAULT_NAME"] = "TopServo1";
Blockly.Msg["ARD_MD_SERVOTYPE_TIP"] = "Selecteer het type Servo die je koppelt aan de Servo connnector";
Blockly.Msg["ARD_MD_SERVO_READ"] = "lees Servo ";
Blockly.Msg["ARD_MD_SERVO_STEP_WARN1"] = "Een Servo configuratie blok moet aanwezig zijn in de Microduino hub om dit blok te kunnen gebruiken!";
Blockly.Msg["ARD_MD_SERVO_STEP_WARN2"] = "Een Naam moet toegekend worden aan de Servo in het Servo configuratie blok!";
Blockly.Msg["ARD_MD_SERVO_STEP_WARN3"] = "De Geselecteerde Servo bestaat niet meer, kies aub een andere.";
Blockly.Msg["ARD_MD_SERVO_WRITE"] = "Positioneer 180 graden Servo ";
Blockly.Msg["ARD_NEOPIXEL"] = "NeoPixel LED licht";
Blockly.Msg["ARD_NEOPIXEL_BRIGHTNESS"] = " helderheid (%)";
Blockly.Msg["ARD_NEOPIXEL_BRIGHTNESS_RANGE"] = "waarde(helderheid) (0 --> 255)";
Blockly.Msg["ARD_NEOPIXEL_CLEAR"] = "Maak leeg";
Blockly.Msg["ARD_NEOPIXEL_COMPONENT"] = "Neopixel strip";
Blockly.Msg["ARD_NEOPIXEL_COUNT_PIXELS"] = "Aantal pixels";
Blockly.Msg["ARD_NEOPIXEL_COUNT_PIXELS_TIP"] = "Geeft het aantal pixels van deze ledstrip";
Blockly.Msg["ARD_NEOPIXEL_DEFAULT_NAME"] = "NeoPixel_1";
Blockly.Msg["ARD_NEOPIXEL_DIRECT"] = "direct";
Blockly.Msg["ARD_NEOPIXEL_EFF_COLORWIPE"] = "Kleurwissel";
Blockly.Msg["ARD_NEOPIXEL_EFF_METEOOR"] = "Meteoor";
Blockly.Msg["ARD_NEOPIXEL_EFF_RAINBOW"] = "Regenboog";
Blockly.Msg["ARD_NEOPIXEL_EFF_SCANNER"] = "Scanner";
Blockly.Msg["ARD_NEOPIXEL_EFF_SNAKE"] = "Slang";
Blockly.Msg["ARD_NEOPIXEL_EFF_SNOW"] = "Sneeuw";
Blockly.Msg["ARD_NEOPIXEL_EFF_STROBE"] = "Stroboscoop";
Blockly.Msg["ARD_NEOPIXEL_EFF_THEATERCHASE"] = "Theater looplicht";
Blockly.Msg["ARD_NEOPIXEL_EFF_THEATERCHASERAINBOW"] = "Theater regenboog looplicht";
Blockly.Msg["ARD_NEOPIXEL_FADE"] = "fade";
Blockly.Msg["ARD_NEOPIXEL_HUE_RANGE"] = "met tint (0 --> 65535)";
Blockly.Msg["ARD_NEOPIXEL_HZ"] = "Frequentie:";
Blockly.Msg["ARD_NEOPIXEL_NUMBER"] = "aantal";
Blockly.Msg["ARD_NEOPIXEL_ONCOLOUR"] = "op kleur";
Blockly.Msg["ARD_NEOPIXEL_ONCOLOURVALBLUE"] = "blauw:";
Blockly.Msg["ARD_NEOPIXEL_ONCOLOURVALGREEN"] = "groen:";
Blockly.Msg["ARD_NEOPIXEL_ONCOLOURVALRED"] = "op kleur (0-255) rood:";
Blockly.Msg["ARD_NEOPIXEL_ONHSVCOLOUR"] = "op HSVkleur";
Blockly.Msg["ARD_NEOPIXEL_PAUSE"] = "pauze";
Blockly.Msg["ARD_NEOPIXEL_PIXEL"] = "pixel";
Blockly.Msg["ARD_NEOPIXEL_PIXELS"] = "Pixels.";
Blockly.Msg["ARD_NEOPIXEL_SAT_RANGE"] = "verzadiging (0 --> 255)";
Blockly.Msg["ARD_NEOPIXEL_SET"] = "Zet Neopixel";
Blockly.Msg["ARD_NEOPIXEL_STRIP"] = "Strip met";
Blockly.Msg["ARD_NEOPIXEL_TIP"] = "Een NEOPIXEL LED licht of een strip met meerdere neopixels.";
Blockly.Msg["ARD_NEOPIXEL_TYPE"] = "Type:";
Blockly.Msg["ARD_NOTONE"] = "Stop afspelen noot op pin#";
Blockly.Msg["ARD_NOTONE_PIN"] = "Geen toon op PIN#";
Blockly.Msg["ARD_NOTONE_PIN_TIP"] = "Stop met een toon op de gegeven pin";
Blockly.Msg["ARD_NOTONE_TIP"] = "Stopt met een noot af te spelen op de gegeven pin";
Blockly.Msg["ARD_NO_ALLBOT"] = "Geen AllBot aanwezig";
Blockly.Msg["ARD_OLED"] = "OLED";
Blockly.Msg["ARD_OLED_CLEAR"] = "clear display";
Blockly.Msg["ARD_OLED_CLEAR_TIP"] = "Before writing new text to the display, use this block to clear it first.";
Blockly.Msg["ARD_OLED_CONFIG_TIP"] = "Definieer een OLED display van de gegeven resolutie om tekst op te kunnen tonen.";
Blockly.Msg["ARD_OLED_CURSORX"] = "zet cursor positie X";
Blockly.Msg["ARD_OLED_CURSORY"] = "Y";
Blockly.Msg["ARD_OLED_DEFAULT_NAME"] = "OLED1";
Blockly.Msg["ARD_OLED_FONT_SIZE"] = "kies font grootte";
Blockly.Msg["ARD_OLED_FONT_TIP"] = "Selecteer de font grootte om te gebruiken bij het schrijven van tekst.";
Blockly.Msg["ARD_OLED_INIT"] = "OLED Initialiseer";
Blockly.Msg["ARD_OLED_PRINT"] = "print tekst";
Blockly.Msg["ARD_OLED_PRINT_NUMBER"] = "print getal";
Blockly.Msg["ARD_OLED_PRINT_NUMBER_DIGITS"] = "met #decimalen:";
Blockly.Msg["ARD_OLED_PRINT_TIP"] = "Bereidt voor om de tekst te tonen op het scherm in de gegeven grootte. Gebruik het schrijf blok om het ook te zien.";
Blockly.Msg["ARD_OLED_RESOLUTIE"] = "met resolutie";
Blockly.Msg["ARD_OLED_WRITE"] = "schrijf naar display";
Blockly.Msg["ARD_OLED_WRITE_TIP"] = "Nadat je tekst geprint hebt op display gebruik je dit blok om de tekst te doen verschijnen.";
Blockly.Msg["ARD_OUTPUT_WRITE_TO"] = "waarde";
Blockly.Msg["ARD_PIN_AN"] = "analoge pin";
Blockly.Msg["ARD_PIN_AN_TIP"] = "Een van de analoge pinnen van de Arduino";
Blockly.Msg["ARD_PIN_DIG"] = "digitale pin";
Blockly.Msg["ARD_PIN_DIGDIG"] = "digitale pin1 en pin2";
Blockly.Msg["ARD_PIN_DIGDIG1"] = "digitale pin1#";
Blockly.Msg["ARD_PIN_DIGDIG2"] = "digitale pin2#";
Blockly.Msg["ARD_PIN_DIGDIG_TIP"] = "Component welke twee digitale pinnen vereist, pin1 en pin2";
Blockly.Msg["ARD_PIN_DIG_TIP"] = "Een van de digitale pinnen van de Arduino";
Blockly.Msg["ARD_PIN_PWM"] = "PWM pin";
Blockly.Msg["ARD_PIN_PWM_TIP"] = "Een van de Puls Breedte Modulatie (PWM) pinnen van de Arduino";
Blockly.Msg["ARD_PIN_WARN1"] = "Pin %1 is nodig voor %2 als pin %3. Al gebruikt als %4.";
Blockly.Msg["ARD_PULSEON"] = "puls op pin #";
Blockly.Msg["ARD_PULSEREAD"] = "Lees een";
Blockly.Msg["ARD_PULSETIMEOUT"] = "wacht maximaal";
Blockly.Msg["ARD_PULSETIMEOUT_MS"] = "microseconden";
Blockly.Msg["ARD_PULSETIMEOUT_TIP"] = "Meet de duur van een puls op een geselecteerde pin, zolang het gebeurt binnen de opgegeven maximale duur (in milliseconden).";
Blockly.Msg["ARD_PULSE_READ"] = "lees een %1 puls op pin #%2";
Blockly.Msg["ARD_PULSE_READ_TIMEOUT"] = "lees een %1 puls op pin #%2 (wacht maximaal %3 μs)";
Blockly.Msg["ARD_PULSE_TIP"] = "Meet de duur van een puls op een geselecteerde pin.";
Blockly.Msg["ARD_PWMOUTPUT"] = "PWM output";
Blockly.Msg["ARD_PWMOUTPUT_COMPONENT"] = "PWM Output";
Blockly.Msg["ARD_PWMOUTPUT_DEFAULT_NAME"] = "PWMOutput1";
Blockly.Msg["ARD_PWMOUTPUT_TIP"] = "Connecteer een generieke PWM (Pulse Width Modulation) ouput aan een PWM pin, zodat je een analoge waarde kunt schrijven naar die pin. De waarde die je schrijft moet een nummer zijn tussen 0 en 255, en zal een blok puls genereren over de pin.";
Blockly.Msg["ARD_PWMOUTPUT_WRITE"] = "Schrijf naar PWM output";
Blockly.Msg["ARD_SERIAL_BPS"] = "bps";
Blockly.Msg["ARD_SERIAL_PRINT"] = "print";
Blockly.Msg["ARD_SERIAL_PRINT_NEWLINE"] = "naar nieuwe lijn";
Blockly.Msg["ARD_SERIAL_PRINT_TIP"] = "Drukt de gegeven data naar de seriele poort als leesbare ASCII tekst (in Arduino IDE open de seriele poort met icoon rechtsboven).";
Blockly.Msg["ARD_SERIAL_PRINT_WARN"] = "Een setup blok voor %1 moet toegevoegd worden aan de canvas om dit block te kunnen gebruiken!";
Blockly.Msg["ARD_SERIAL_SETUP"] = "Start";
Blockly.Msg["ARD_SERIAL_SETUP_TIP"] = "Selecteer de snelheid voor een seriele connectie";
Blockly.Msg["ARD_SERIAL_SPEED"] = ":  zet snelheid op";
Blockly.Msg["ARD_SERVOHUB"] = "Servo motor";
Blockly.Msg["ARD_SERVOHUB_READ"] = "lees Servo ";
Blockly.Msg["ARD_SERVOHUB_TIP"] = "Servo Motor Connectie, welke je kan verbinden aan een PWM pin. Je moet de servo een naam geven, en aangeven welk type het is (een 180 graden servo of een 360 graden servo.)";
Blockly.Msg["ARD_SERVOHUB_WRITE"] = "Positioneer 180 graden Servo ";
Blockly.Msg["ARD_SERVO_COMPONENT"] = "servo";
Blockly.Msg["ARD_SERVO_DEFAULT_NAME"] = "Servo1";
Blockly.Msg["ARD_SERVO_READ"] = "lees Servo met pin";
Blockly.Msg["ARD_SERVO_READ_TIP"] = "Lees de hoek van een Servo motor die met de gegeven pin connecteert";
Blockly.Msg["ARD_SERVO_ROTATE360"] = "Roteer 360 graden Servo";
Blockly.Msg["ARD_SERVO_ROTATEPERC"] = "% (-100 tot 100)";
Blockly.Msg["ARD_SERVO_ROTATESPEED"] = "met snelheid";
Blockly.Msg["ARD_SERVO_ROTATE_TIP"] = "Draai een Servo aan een bepaalde snelheid";
Blockly.Msg["ARD_SERVO_TYPE"] = "Type:";
Blockly.Msg["ARD_SERVO_WRITE"] = "positioneer Servo met pin";
Blockly.Msg["ARD_SERVO_WRITE_DEG_180"] = "graden (0~180)";
Blockly.Msg["ARD_SERVO_WRITE_TIP"] = "Positioneer een Servo motor naar de gegeven hoek";
Blockly.Msg["ARD_SERVO_WRITE_TO"] = "naar";
Blockly.Msg["ARD_SETTONE"] = "Speel noot op pin#";
Blockly.Msg["ARD_SPI_SETUP"] = "Definieer";
Blockly.Msg["ARD_SPI_SETUP_CONF"] = "configuratie:";
Blockly.Msg["ARD_SPI_SETUP_DIVIDE"] = "klok divisie";
Blockly.Msg["ARD_SPI_SETUP_LSBFIRST"] = "LSBFIRST";
Blockly.Msg["ARD_SPI_SETUP_MODE"] = "SPI modus (idle - edge)";
Blockly.Msg["ARD_SPI_SETUP_MODE0"] = "0 (Low - Falling)";
Blockly.Msg["ARD_SPI_SETUP_MODE1"] = "1 (Low - Rising)";
Blockly.Msg["ARD_SPI_SETUP_MODE2"] = "2 (High - Falling)";
Blockly.Msg["ARD_SPI_SETUP_MODE3"] = "3 (High - Rising)";
Blockly.Msg["ARD_SPI_SETUP_MSBFIRST"] = "MSBFIRST";
Blockly.Msg["ARD_SPI_SETUP_SHIFT"] = "data shift";
Blockly.Msg["ARD_SPI_SETUP_TIP"] = "Configureert een SPI randapparaat.";
Blockly.Msg["ARD_SPI_TRANSRETURN_TIP"] = "Stuur een SPI bericht naar het opgegeven slaaf toestel en krijg data terug.";
Blockly.Msg["ARD_SPI_TRANS_NONE"] = "geen";
Blockly.Msg["ARD_SPI_TRANS_SLAVE"] = "naar slaaf pin";
Blockly.Msg["ARD_SPI_TRANS_TIP"] = "Stuurt een SPI bericht naar het opgegeven slaaf toestel.";
Blockly.Msg["ARD_SPI_TRANS_VAL"] = "stuur";
Blockly.Msg["ARD_SPI_TRANS_WARN1"] = "Een Defenitie blok voor %1 moet toegevoegd worden aan de canvas om dit blok te gebruiken!";
Blockly.Msg["ARD_SPI_TRANS_WARN2"] = "Oude pin waarde %1 is niet langer beschikbaar.";
Blockly.Msg["ARD_STEPPER_COMPONENT"] = "stappenmotor";
Blockly.Msg["ARD_STEPPER_DEFAULT_NAME"] = "MijnStappenMotor";
Blockly.Msg["ARD_STEPPER_DEGREES"] = "graden";
Blockly.Msg["ARD_STEPPER_FOUR_PINS"] = "4";
Blockly.Msg["ARD_STEPPER_ISROTATING"] = "in beweging";
Blockly.Msg["ARD_STEPPER_ISROTATING_TIP"] = "Dit blok is waar als de stappenmotor aan het bewegen is, anders onwaar.";
Blockly.Msg["ARD_STEPPER_MOTOR"] = "";
Blockly.Msg["ARD_STEPPER_NUMBER_OF_PINS"] = "Number of pins";  // untranslated
Blockly.Msg["ARD_STEPPER_PIN1"] = "pin1#";
Blockly.Msg["ARD_STEPPER_PIN2"] = "pin2#";
Blockly.Msg["ARD_STEPPER_PIN3"] = "pin3#";
Blockly.Msg["ARD_STEPPER_PIN4"] = "pin4#";
Blockly.Msg["ARD_STEPPER_RESTART"] = "Zet";
Blockly.Msg["ARD_STEPPER_RESTART_AFTER"] = "klaar";
Blockly.Msg["ARD_STEPPER_RESTART_TIP"] = "Zet de motor klaar nadat een rotatie block afgelopen is, zodat opnieuw kan geroteerd worden.";
Blockly.Msg["ARD_STEPPER_REVOLVS"] = "aantal stappen per omwenteling";
Blockly.Msg["ARD_STEPPER_ROTATE"] = "Roteer";
Blockly.Msg["ARD_STEPPER_ROTATE_TIP"] = "Roteer de stappenmotor over de gegeven graden in een niet blokkerende manier. Dit blok moet constant aangeroepen worden in de loop. Als rotatie gedaan is, wordt de motor geblokkeerd. En herstart beweging blok dient aangeroepen te worden vooraleer beweging weer kan starten.";
Blockly.Msg["ARD_STEPPER_SETUP"] = "Definieer stappenmotor ";
Blockly.Msg["ARD_STEPPER_SETUP_TIP"] = "Configureert een stappenmotor, pinouts en andere waarden zoals rondes per minuut.";
Blockly.Msg["ARD_STEPPER_SPEED"] = "zet snelheid (rpm) op";
Blockly.Msg["ARD_STEPPER_SPEED_TIP"] = "Bepaal snelheid van de moter. De stappen zullen gezet worden aan de snelheid nodig om deze gegeven snelheid te bereiken gebaseerd op de gegeven aantal stappen per omwenteling gegeven in de definitie.";
Blockly.Msg["ARD_STEPPER_STEP"] = "beweeg stappenmotor";
Blockly.Msg["ARD_STEPPER_STEPS"] = "stappen";
Blockly.Msg["ARD_STEPPER_STEP_TIP"] = "Draait de stappenmotor een opgegeven aantal stappen";
Blockly.Msg["ARD_STEPPER_TWO_PINS"] = "2";
Blockly.Msg["ARD_TFT_BG_COLOUR"] = "Kleur van de achtergrond";
Blockly.Msg["ARD_TFT_BG_TIP"] = "Vul het volledige scherm met de gegeven kleur";
Blockly.Msg["ARD_TFT_CIRC_HEIGHT"] = "Height";  // untranslated
Blockly.Msg["ARD_TFT_CIRC_RADIUS"] = "Straal";
Blockly.Msg["ARD_TFT_CIRC_TIP"] = "Teken een cirkel op het scherm met de gegeven coordinaten in de gegeven kleur. Als 'Vul' aan staat zal de cirkel gevuld worden met de kleur, anders wordt enkel de rand getekend.";
Blockly.Msg["ARD_TFT_CIRC_XPOS"] = "X Positie Centrum";
Blockly.Msg["ARD_TFT_CIRC_YPOS"] = "Y Positie Centrum";
Blockly.Msg["ARD_TFT_COMPONENT"] = "TFT-Scherm";
Blockly.Msg["ARD_TFT_COMPONENT_TIP"] = "Het ST7735 1.8inch Color TFT scherm. Scherm is 128x160 pixels.";
Blockly.Msg["ARD_TFT_FILLED"] = "Vul de tekening";
Blockly.Msg["ARD_TFT_LINE_COLOUR"] = "Kleur";
Blockly.Msg["ARD_TFT_LINE_TIP"] = "Teken een lijn op het scherm met de gegeven coordinaten in de gegeven kleur.";
Blockly.Msg["ARD_TFT_LINE_XPOSBEGIN"] = "X Positie Start";
Blockly.Msg["ARD_TFT_LINE_XPOSEND"] = "X Positie Einde";
Blockly.Msg["ARD_TFT_LINE_YPOSBEGIN"] = "Y Positie Start";
Blockly.Msg["ARD_TFT_LINE_YPOSEND"] = "Y Positie Einde";
Blockly.Msg["ARD_TFT_MAKE_CIRC"] = "Teken een Cirkel";
Blockly.Msg["ARD_TFT_MAKE_LINE"] = "Teken een Lijnstuk";
Blockly.Msg["ARD_TFT_MAKE_RECT"] = "Teken een Rechthoek";
Blockly.Msg["ARD_TFT_RECT_COLOUR"] = "Kleur";
Blockly.Msg["ARD_TFT_RECT_HEIGHT"] = "Hoogte";
Blockly.Msg["ARD_TFT_RECT_TIP"] = "Teken een rechthoek op het scherm met de gegeven coordinaten in de gegeven kleur. Als 'Vul' aan staat zal de rechthoek gevuld worden met de kleur, anders wordt enkel de rand getekend.";
Blockly.Msg["ARD_TFT_RECT_WIDTH"] = "Breedte";
Blockly.Msg["ARD_TFT_RECT_XPOSBEGIN"] = "X Positie Boven Links";
Blockly.Msg["ARD_TFT_RECT_YPOSBEGIN"] = "Y Positie Boven Links";
Blockly.Msg["ARD_TFT_SPRITE_NAME"] = "Sprite met naam";
Blockly.Msg["ARD_TFT_TEXT_COLOUR"] = "Kleur van de tekst";
Blockly.Msg["ARD_TFT_TEXT_SIZE"] = "Grootte";
Blockly.Msg["ARD_TFT_TEXT_TIP"] = "Schrijf een tekst op het scherm in de gegeven kleur op de gegeven poitie.";
Blockly.Msg["ARD_TFT_TEXT_WRITE"] = "Schrijf tekst";
Blockly.Msg["ARD_TFT_TEXT_XPOS"] = "X positie";
Blockly.Msg["ARD_TFT_TEXT_YPOS"] = "Y positie";
Blockly.Msg["ARD_TIME_DELAY"] = "wacht";
Blockly.Msg["ARD_TIME_DELAY_MICROS"] = "microseconden";
Blockly.Msg["ARD_TIME_DELAY_MICRO_TIP"] = "Wacht de opgegeven tijd in microseconden (miljoensten van een seconde)";
Blockly.Msg["ARD_TIME_DELAY_TIP"] = "Wacht de opgegeven tijd in milliseconden (duizendsten van een seconde)";
Blockly.Msg["ARD_TIME_EVERY"] = "iedere";
Blockly.Msg["ARD_TIME_INF"] = "wacht voor eeuwig (beeindig programma)";
Blockly.Msg["ARD_TIME_INF_TIP"] = "Wacht voor altijd, stopt het programma waar deze lijn staat.";
Blockly.Msg["ARD_TIME_MICROS"] = "tijd sinds start (microseconden)";
Blockly.Msg["ARD_TIME_MICROS_TIP"] = "Geeft aantal microseconden terug sinds start van de Arduino. Moet je opslaan in een positief lang geheel getal!";
Blockly.Msg["ARD_TIME_MILLIS"] = "tijd sinds start (milliseconden)";
Blockly.Msg["ARD_TIME_MILLIS_TIP"] = "Geeft aantal milliseconden terug sinds start van de Arduino. Moet je opslaan in een positief lang geheel getal!";
Blockly.Msg["ARD_TIME_MS"] = "milliseconden";
Blockly.Msg["ARD_TIME_S"] = "seconden";
Blockly.Msg["ARD_TONEDURATION"] = "en duurtijd (ms)";
Blockly.Msg["ARD_TONEDURATION_TIP"] = "Speelt een toon op de buzzer met de gegeven frequentie binnen het interval 31 - 65535 en met de gegeven duurtijd in milliseconden. Opgelet: een duurtijd van een toon loopt door, ook tijdens een pauze, een nieuwe toonopdracht kan enkel gegeven worden als de vorige toon gestopt is!";
Blockly.Msg["ARD_TONEFREQ"] = "met frequentie";
Blockly.Msg["ARD_TONEPITCH_TIP"] = "Speelt een toon op de buzzer met de gegeven toonhoogte en met de gegeven duurtijd in milliseconden. Opgelet: een duurtijd van een toon loopt door, ook tijdens een pauze, een nieuwe toonopdracht kan enkel gegeven worden als de vorige toon gestopt is!";
Blockly.Msg["ARD_TONE_FREQ"] = "met frequentie";
Blockly.Msg["ARD_TONE_PIN"] = "Toon op PIN#";
Blockly.Msg["ARD_TONE_PIN_TIP"] = "Genereert een geluidstoon op de PIN";
Blockly.Msg["ARD_TONE_TIP"] = "Speelt een noot op de gegeven pin met de opgegeven frequentie binnen interval 31 - 65535";
Blockly.Msg["ARD_TONE_WARNING"] = "Frequentie moet in het interval 31 - 65535 liggen";
Blockly.Msg["ARD_TONE_WARNING2"] = "Een duurtijd moet positief zijn (>0)";
Blockly.Msg["ARD_TYPE_ARRAY"] = "Lijst";
Blockly.Msg["ARD_TYPE_BOOL"] = "Bool (0 of 1)";
Blockly.Msg["ARD_TYPE_CHAR"] = "Letter";
Blockly.Msg["ARD_TYPE_CHILDBLOCKMISSING"] = "ChildBlockMissing";
Blockly.Msg["ARD_TYPE_DECIMAL"] = "Decimaal Getal";
Blockly.Msg["ARD_TYPE_LONG"] = "Groot Nummer";
Blockly.Msg["ARD_TYPE_NULL"] = "Geen Type";
Blockly.Msg["ARD_TYPE_NUMBER"] = "Nummer";
Blockly.Msg["ARD_TYPE_SHORT"] = "Kort Nummer";
Blockly.Msg["ARD_TYPE_TEXT"] = "Tekst";
Blockly.Msg["ARD_TYPE_UNDEF"] = "Ongedefineerd";
Blockly.Msg["ARD_UNKNOWN_ALLBOTJOINT"] = "De oude servo waarde %1 is niet langer beschikbaar";
Blockly.Msg["ARD_VALUE"] = "value";  // untranslated
Blockly.Msg["ARD_VAR_AS"] = "als";
Blockly.Msg["ARD_VAR_AS_TIP"] = "Wijzigt de waarde in het gegeven type";
Blockly.Msg["ARD_WRITE_TO"] = "waarde";
Blockly.Msg["B4A_COMPILE_EMPTY"] = "Compiler gaf leeg bestand terug - Code niet opgeladen naar toestel";
Blockly.Msg["B4A_ERROR"] = "FOUTEN!";
Blockly.Msg["B4A_FLASHING"] = "Code aan het uploaden naar het toestel";
Blockly.Msg["B4A_MSG_EXTENSION"] = "Bericht van de extensie: ";
Blockly.Msg["B4A_NO_CHROME"] = "Je moet Google Chrome gebruiken om deze Upload functionaliteit te kunnen gebruiken";
Blockly.Msg["B4A_NO_EXTENSION"] = "Chrome Extensie is niet  geïnstalleerd";
Blockly.Msg["B4A_SET_IP_COMPILER"] = "Nieuw IP Address voor de compiler";
Blockly.Msg["B4A_SUCCESS"] = "SUCCES!";
Blockly.Msg["B4A_UPLOAD_FAIL"] = "Upload mislukt. Chrome Extensie is niet  geïnstalleerd";
Blockly.Msg["B4A_VERIFY_FAIL"] = "Verifieren mislukt. Chrome Extensie is niet  geïnstalleerd";
Blockly.Msg["COLOUR_RGB255_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 255. See https://www.google.be/search?q=color+picker";
Blockly.Msg["CONTROLS_SWITCH_CASEBREAK_TOOLTIP"] = "Voeg een \"conditie\"-blok toe om een niewe voorwaarde te maken.";
Blockly.Msg["CONTROLS_SWITCH_DEFAULT_TOOLTIP"] = "Voeg een optionele standaard actie toe die wordt uitgevoerd als geen enkele van de bovenstaande voorwaarden vervuld is";
Blockly.Msg["CONTROLS_SWITCH_HELPURL"] = "https://nl.wikibooks.org/wiki/Programmeren_in_C%2B%2B/Switch";
Blockly.Msg["CONTROLS_SWITCH_MSG_CASEBREAK"] = "conditie is =";
Blockly.Msg["CONTROLS_SWITCH_MSG_DEFAULT"] = "anders";
Blockly.Msg["CONTROLS_SWITCH_MSG_DO"] = "doe";
Blockly.Msg["CONTROLS_SWITCH_MSG_SWITCHVAR"] = "Schakel (conditie variabele)";
Blockly.Msg["CONTROLS_SWITCH_SWITCH_TOOLTIP"] = "Voeg stukken toe, verwijder of wijzig de volgorde om dit switch-blok te wijzigen.";
Blockly.Msg["CONTROLS_SWITCH_TOOLTIP_1"] = "Als de conditie de gegeven waarde heeft, voer dan de opdrachten uit.";
Blockly.Msg["CONTROLS_SWITCH_TOOLTIP_2"] = "Als de condition de gegeven waarde heeft, doe dan het eerste blok opdrachten. Anders, doe het tweede blok opdrachten.";
Blockly.Msg["CONTROLS_SWITCH_TOOLTIP_3"] = "Als de condition de gegeven eerste waarde heeft, doe dan het eerste blok opdrachten. Anders, als de conditie de gegeven tweede waarde heeft, doe het tweede blok opdrachten.";
Blockly.Msg["CONTROLS_SWITCH_TOOLTIP_4"] = "Als de condition de gegeven eerste waarde heeft, doe dan het eerste blok opdrachten. Anders, als de conditie de gegeven tweede waarde heeft, doe het tweede blok opdrachten. Als geen enkele waarde juist is, doe dan het laatste blok opdrachten.";
Blockly.Msg["CONTROLS_SWITCH_VAR_TAIL"] = ")";
Blockly.Msg["CONTROLS_SWITCH_VAR_TITLE"] = "Schakel conditie (";
Blockly.Msg["CONTROLS_SWITCH_VAR_TOOLTIP"] = "Sleep blokken van links naar hier om ze toe te voegen.";
Blockly.Msg["NEW_INSTANCE"] = "Nieuw object...";
Blockly.Msg["NEW_INSTANCE_TITLE"] = "Nieuwe objectnaam:";
Blockly.Msg["RENAME_INSTANCE"] = "Hernoem object...";
Blockly.Msg["RENAME_INSTANCE_TITLE"] = "Hernoem alle '%1' objecten als:";
Blockly.Msg["REPLACE_EXISTING_BLOCKS"] = "Replace existing blocks? 'Cancel' will merge.";  // untranslated
Blockly.Msg["SAVE_FILE_AS"] = "Bestand opslaan als";
Blockly.Msg["UPLOAD_CLICK_1"] = "Om jou code op te laden naar de Arduino doe je:";
Blockly.Msg["UPLOAD_CLICK_2"] = "  1. klik op de Arduino tab";
Blockly.Msg["UPLOAD_CLICK_3"] = "  2. selecteeer alle code, en copieer (CTRL+A en CTRL+C)";
Blockly.Msg["UPLOAD_CLICK_4"] = "  3. In de Arduino IDE of online via een http://codebender.cc sketch, plak je gecopieerde code (CTRL+V)";
Blockly.Msg["UPLOAD_CLICK_5"] = "  4. Laad de code op naar je geconnecteerde Arduino";
Blockly.Msg["ARD_CONTROLS_EFFECT_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_ELSEIF"];
Blockly.Msg["ARD_CONTROLS_EFFECT_ELSE_TITLE_ELSE"] = Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_ELSE"];
Blockly.Msg["ARD_CONTROLS_EFFECT_IF_TITLE_IF"] = Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_IF"];
Blockly.Msg["ARD_CONTROLS_EFFECT_IF_TOOLTIP"] = Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"];
Blockly.Msg["ARD_CONTROLS_EFFECT_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];

Blockly.Msg["COMPONENTS_HUE"] = "#70D65C";